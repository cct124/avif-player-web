/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["AvifPlayerWeb"] = factory();
	else
		root["AvifPlayerWeb"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/crypto-js/core.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/core.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse {}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {\n\t        crypto = __webpack_require__.g.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && \"function\" === 'function') {\n\t        try {\n\t            crypto = __webpack_require__(/*! crypto */ \"?9157\");\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-js/core.js\n");

/***/ }),

/***/ "./node_modules/crypto-js/md5.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/md5.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-js/md5.js\n");

/***/ }),

/***/ "./src/AnimationPlayback/index.ts":
/*!****************************************!*\
  !*** ./src/AnimationPlayback/index.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst Observer_1 = __webpack_require__(/*! ../Observer */ \"./src/Observer/index.ts\");\nconst types_1 = __webpack_require__(/*! ../types */ \"./src/types/index.ts\");\nconst WorkerMessageType_1 = __webpack_require__(/*! ../types/WorkerMessageType */ \"./src/types/WorkerMessageType.ts\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./src/utils/index.ts\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./src/AnimationPlayback/type.ts\");\nclass AnimationPlayback extends Observer_1.Observer {\n    constructor(AvifPlayerWeb, canvas, decoder, option = {}) {\n        super();\n        this.playing = false;\n        this.paused = false;\n        /**\n         * 当前帧索引\n         */\n        this.index = 0;\n        this.lastTimestamp = 0;\n        this.renderStats = [];\n        this.loopCount = 0;\n        this.framesCancel = [];\n        this.pauseIndex = 0;\n        this.pts = 0;\n        this.frameIndex = 0;\n        this.AvifPlayerWeb = AvifPlayerWeb;\n        this.option = (0, utils_1.deepMixins)(option, {\n            webgl: true,\n            loop: 1,\n            async: false,\n        });\n        this.update = this.option.async ? this.updateAsync : this.updateSync;\n        if (this.option.loop === 0)\n            this.option.loop = Infinity;\n        this.canvas = canvas;\n        this.setDecoder(decoder);\n        this.on(type_1.PlayChannelType.frameIndexChange, (data) => {\n            this.AvifPlayerWeb.emit(types_1.AvifPlayerWebChannel.frameIndexChange, data);\n        });\n    }\n    setDecoder(decoder) {\n        this.decoder = decoder;\n    }\n    initRender() {\n        if (this.option.webgl) {\n            this.gl = this.canvas.getContext(\"webgl\");\n            if (this.gl) {\n                this.webglInit(this.gl);\n                this.render = this.renderWebgl;\n            }\n            else {\n                throw new Error(\"webgl对象创建失败\" + this.gl);\n            }\n        }\n        else {\n            this.ctx2d = this.canvas.getContext(\"2d\");\n            this.render = this.renderCanvas;\n        }\n    }\n    play(index) {\n        if (!this.playing) {\n            if (this.decoder) {\n                if ((0, utils_1.isNumeric)(index))\n                    this.index = index;\n                if (this.option.async) {\n                    this.resetFramesStatus(this.decoder.imageCount);\n                    if (this.paused)\n                        this.index = this.frameIndex + 1;\n                }\n                this.update(this.paused ? this.pts : 0);\n            }\n            else {\n                throw new Error(\"未设置解码器对象\");\n            }\n        }\n    }\n    resetFramesStatus(imageCount) {\n        this.framesPerformanceDelay = new Array(imageCount).fill(0);\n    }\n    /**\n     * 暂停播放\n     */\n    pause(index) {\n        if (!this.playing)\n            return;\n        this.paused = true;\n        if ((0, utils_1.isNumeric)(index))\n            this.index = index;\n        this.framesCancel\n            .filter((handle) => handle > 0)\n            .forEach((handle) => {\n            window.cancelAnimationFrame(handle);\n        });\n        this.decoder.clearNthImageMessage();\n        this.AvifPlayerWeb.emit(types_1.AvifPlayerWebChannel.pause, true);\n        this.playing = false;\n        if (this.option.async)\n            this.resetFramesStatus(this.decoder.imageCount);\n    }\n    updateAsync() {\n        return __awaiter(this, arguments, void 0, function* (diff = 0) {\n            this.paused = false;\n            this.playing = true;\n            this.AvifPlayerWeb.emit(types_1.AvifPlayerWebChannel.play, true);\n            for (this.loopCount = this.loopCount; this.loopCount < this.option.loop; this.loopCount++) {\n                let startTime = (this.lastTimestamp = performance.now());\n                while (this.index < this.decoder.imageCount && !this.paused) {\n                    const imageData = yield this.decoder.decoderNthImage(this.index);\n                    const now = performance.now();\n                    startTime = this.framesPerformanceDelay[this.framesPerformanceDelay.length - 1]\n                        ? this.framesPerformanceDelay[this.framesPerformanceDelay.length - 1]\n                        : startTime;\n                    const frameDisplayTime = startTime + imageData.pts * 1000 - diff;\n                    let delay = frameDisplayTime - now - imageData.decodeTime;\n                    const prevDelay = imageData.index\n                        ? this.framesPerformanceDelay[imageData.index - 1]\n                        : this.framesPerformanceDelay[this.framesPerformanceDelay.length - 1] || 0;\n                    this.framesPerformanceDelay[imageData.index] = now + delay;\n                    if (prevDelay > this.framesPerformanceDelay[imageData.index]) {\n                        delay = prevDelay - now;\n                        this.framesPerformanceDelay[imageData.index] = now + delay;\n                    }\n                    this.sleep(delay).then(() => {\n                        const pixels = new Uint8ClampedArray(imageData.pixels);\n                        this.render(pixels, imageData.width, imageData.height);\n                        this.frameIndex = imageData.index;\n                        this.pts = imageData.pts * 1000;\n                        this.emit(type_1.PlayChannelType.frameIndexChange, {\n                            index: this.frameIndex,\n                            decodeTime: imageData.decodeTime,\n                        });\n                    });\n                    this.lastTimestamp = performance.now();\n                    this.index++;\n                }\n                this.index = 0;\n            }\n            this.index = 0;\n            this.loopCount = 0;\n            this.AvifPlayerWeb.emit(types_1.AvifPlayerWebChannel.end, true);\n            this.playing = false;\n        });\n    }\n    updateSync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.paused = false;\n            this.playing = true;\n            this.AvifPlayerWeb.emit(types_1.AvifPlayerWebChannel.play, true);\n            this.lastTimestamp = performance.now();\n            for (this.loopCount = this.loopCount; this.loopCount < this.option.loop; this.loopCount++) {\n                while (this.index < this.decoder.imageCount) {\n                    const imageData = yield this.decoder.decoderNthImage(this.index);\n                    const delay = this.index\n                        ? imageData.duration * 1000 - imageData.decodeTime\n                        : 0;\n                    if (delay > 0) {\n                        yield this.sleep(delay);\n                    }\n                    const pixels = new Uint8ClampedArray(imageData.pixels);\n                    this.render(pixels, imageData.width, imageData.height);\n                    this.emit(type_1.PlayChannelType.frameIndexChange, {\n                        index: this.index,\n                        decodeTime: imageData.decodeTime,\n                    });\n                    this.index++;\n                }\n                this.index = 0;\n            }\n            this.index = 0;\n            this.loopCount = 0;\n            this.AvifPlayerWeb.emit(types_1.AvifPlayerWebChannel.end, true);\n            this.playing = false;\n        });\n    }\n    awaitNextFrameDecode(decoder) {\n        return new Promise((resolve, reject) => {\n            decoder.once(WorkerMessageType_1.DecoderChannel.nextImage, () => resolve(true));\n            decoder.once(WorkerMessageType_1.DecoderChannel.error, () => reject(false));\n        });\n    }\n    webglInit(gl) {\n        // 创建并配置纹理\n        const texture = gl.createTexture();\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        // 顶点着色器\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        if (vertexShader) {\n            gl.shaderSource(vertexShader, `\r\n          attribute vec4 position;\r\n          varying vec2 vUV;\r\n          void main() {\r\n            vUV = position.xy * 0.5 + 0.5;\r\n            // 修改此处，翻转Y坐标\r\n            gl_Position = vec4(position.x, -position.y, position.z, position.w);\r\n          }\r\n        `);\n            gl.compileShader(vertexShader);\n            // 片元着色器\n            const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n            if (fragmentShader) {\n                gl.shaderSource(fragmentShader, `\r\n            precision mediump float;\r\n            varying vec2 vUV;\r\n            uniform sampler2D texture;\r\n            void main() {\r\n              vec4 texColor = texture2D(texture, vUV);\r\n              gl_FragColor = texture2D(texture, vUV);\r\n            }\r\n          `);\n                gl.compileShader(fragmentShader);\n                // 创建着色器程序\n                const program = gl.createProgram();\n                if (program) {\n                    gl.attachShader(program, vertexShader);\n                    gl.attachShader(program, fragmentShader);\n                    gl.linkProgram(program);\n                    gl.useProgram(program);\n                    // 创建缓冲区\n                    const vertexBuffer = gl.createBuffer();\n                    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n                    // 链接顶点属性\n                    const positionLocation = gl.getAttribLocation(program, \"position\");\n                    gl.enableVertexAttribArray(positionLocation);\n                    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n                }\n            }\n        }\n    }\n    renderWebgl(uint8ClampedArray, width, height) {\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, width, height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, uint8ClampedArray);\n        // 绘制\n        this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    }\n    renderCanvas(uint8ClampedArray, width, height) {\n        this.ctx2d.clearRect(0, 0, width, height);\n        // 使用转换后的 clampedPixels 创建 ImageData 对象\n        const imageData = new ImageData(uint8ClampedArray, width, height);\n        // 将 ImageData 对象绘制到 Canvas 上\n        this.ctx2d.putImageData(imageData, 0, 0);\n    }\n    sleep(delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (delay <= 0) {\n                return Promise.resolve();\n            }\n            else {\n                return new Promise((resolve) => {\n                    this.timeout(resolve, delay);\n                });\n            }\n        });\n    }\n    timeout(callback, ms = 0) {\n        let start;\n        const step = (timestamp) => {\n            if (start === undefined)\n                start = timestamp;\n            const elapsed = timestamp - start;\n            if (elapsed >= ms) {\n                callback(elapsed);\n            }\n            else {\n                this.framesCancel.push(window.requestAnimationFrame(step));\n            }\n        };\n        this.framesCancel.push(window.requestAnimationFrame(step));\n    }\n    destroy() {\n        this.pause();\n        this.index = 0;\n        this.frameIndex = 0;\n    }\n}\nexports[\"default\"] = AnimationPlayback;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/AnimationPlayback/index.ts\n");

/***/ }),

/***/ "./src/AnimationPlayback/type.ts":
/*!***************************************!*\
  !*** ./src/AnimationPlayback/type.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PlayChannelType = void 0;\nvar PlayChannelType;\n(function (PlayChannelType) {\n    PlayChannelType[PlayChannelType[\"frameIndexChange\"] = 1] = \"frameIndexChange\";\n})(PlayChannelType || (exports.PlayChannelType = PlayChannelType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQW5pbWF0aW9uUGxheWJhY2svdHlwZS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLGVBRVg7QUFGRCxXQUFZLGVBQWU7SUFDekIsNkVBQW9CO0FBQ3RCLENBQUMsRUFGVyxlQUFlLCtCQUFmLGVBQWUsUUFFMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmlmUGxheWVyV2ViLy4vc3JjL0FuaW1hdGlvblBsYXliYWNrL3R5cGUudHM/MzRhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBQbGF5Q2hhbm5lbFR5cGUge1xyXG4gIGZyYW1lSW5kZXhDaGFuZ2UgPSAxLFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFBsYXlFdmVudE1hcCB7XHJcbiAgW1BsYXlDaGFubmVsVHlwZS5mcmFtZUluZGV4Q2hhbmdlXTogRnJhbWVJbmRleENoYW5nZUV2ZW50O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZyYW1lSW5kZXhDaGFuZ2VFdmVudCB7XHJcbiAgLyoqXHJcbiAgICog5bin57Si5byVXHJcbiAgICovXHJcbiAgaW5kZXg6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDlvZPliY3luKfop6PnoIHml7bpl7RcclxuICAgKi9cclxuICBkZWNvZGVUaW1lOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGxheU9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqIOWQr+eUqHdlYmds5riy5p+TXHJcbiAgICovXHJcbiAgd2ViZ2w/OiBib29sZWFuO1xyXG4gIC8qKlxyXG4gICAqIOW+queOr+aSreaUvuasoeaVsO+8jDDooajnpLrml6DpmZDlvqrnjq/mkq3mlL7vvIzpu5jorqQxXHJcbiAgICovXHJcbiAgbG9vcD86IG51bWJlcjtcclxuICAvKipcclxuICAgKiDmmK/lkKblvIDlkK/lvILmraXop6PnoIHvvIzlvIDlkK/ov5nkuKrmkq3mlL7ns7vnu5/lsIblsL3lj6/og73nmoTop6PnoIHmr4/kuIDluKfvvIzmkq3mlL7lsIbkvJrmm7TmtYHnlYXvvIzlia/kvZznlKjmmK/ljaDnlKjlhoXlrZjlpKfvvIzmmoLlgZzlkI7ph43mlrDmkq3mlL7ml7blj6/og73mnInlu7bov5/vvIzpu5jorqRmYWxzZVxyXG4gICAqL1xyXG4gIGFzeW5jPzogYm9vbGVhbjtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/AnimationPlayback/type.ts\n");

/***/ }),

/***/ "./src/AvifPlayer.ts":
/*!***************************!*\
  !*** ./src/AvifPlayer.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst md5_1 = __importDefault(__webpack_require__(/*! crypto-js/md5 */ \"./node_modules/crypto-js/md5.js\"));\nconst main_worker_1 = __importDefault(__webpack_require__(/*! ./Worker/main.worker */ \"./src/Worker/main.worker.ts\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils/index.ts\");\nconst AnimationPlayback_1 = __importDefault(__webpack_require__(/*! ./AnimationPlayback */ \"./src/AnimationPlayback/index.ts\"));\nconst WorkerMessageType_1 = __webpack_require__(/*! ./types/WorkerMessageType */ \"./src/types/WorkerMessageType.ts\");\nconst LibavifDecoder_1 = __webpack_require__(/*! ./Decoder/LibavifDecoder */ \"./src/Decoder/LibavifDecoder.ts\");\nconst Observer_1 = __webpack_require__(/*! ./Observer */ \"./src/Observer/index.ts\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./src/types/index.ts\");\nclass AvifPlayer extends Observer_1.Observer {\n    constructor(url, canvas, option = {}) {\n        super();\n        /**\n         * 是否支持av1视频编码\n         */\n        this.av1Support = false;\n        if (typeof canvas === \"string\" || canvas instanceof HTMLCanvasElement) {\n            option.canvas = canvas;\n        }\n        else if (canvas instanceof Object) {\n            option = canvas;\n        }\n        // 合并配置项\n        this.option = (0, utils_1.deepMixins)(option, {\n            decodeImmediately: true,\n            webgl: false,\n            autoplay: false,\n            initDecoderInstantly: false,\n            initDecoderAvifInstantly: false,\n        });\n        // 判断是元素id还是DOM对象\n        if (typeof this.option.canvas === \"string\") {\n            this.option.canvas = document.getElementById(this.option.canvas);\n        }\n        this.checkConstructor(url, this.option);\n        this.url = url;\n        this.resourceSymbolId = (0, md5_1.default)(url).toString();\n        if (this.option.autoplay) {\n            this.initialLibavifDecoder().then(() => {\n                this.decoderParsePlay(this.url).then(() => {\n                    this.animationPlayback.play();\n                });\n            });\n        }\n        else if (this.option.initDecoderInstantly) {\n            this.initialLibavifDecoder();\n        }\n        else if (this.option.initDecoderAvifInstantly) {\n            this.initialLibavifDecoder().then(() => {\n                this.decoderParsePlay(this.url);\n            });\n        }\n    }\n    initialLibavifDecoder(reset) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.libavifDecoder = new LibavifDecoder_1.LibavifDecoder(new main_worker_1.default(), this.resourceSymbolId);\n                if (reset && this.animationPlayback) {\n                    this.animationPlayback.setDecoder(this.libavifDecoder);\n                }\n                else {\n                    this.animationPlayback = new AnimationPlayback_1.default(this, this.option.canvas, this.libavifDecoder, {\n                        webgl: this.option.webgl,\n                        loop: this.option.loop,\n                        async: this.option.async,\n                    });\n                }\n                this.libavifDecoder.onmessageOnce(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.initial, () => {\n                    resolve(this.libavifDecoder);\n                });\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    pause() {\n        this.animationPlayback.pause();\n    }\n    play() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 解码器对象不存在时，解码器可能为初始化或者被销毁，这时重新初始化解码器\n            if (!this.libavifDecoder) {\n                yield this.initialLibavifDecoder();\n                yield this.decoderParsePlay(this.url);\n            }\n            else if (!this.libavifDecoder.decoderParseComplete) {\n                yield this.decoderParsePlay(this.url);\n            }\n            this.animationPlayback.play();\n        });\n    }\n    decoderParsePlay(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.libavifDecoder.decoderParseComplete) {\n                this.setCanvasSize();\n                this.avifFileArrayBuffer = yield this.fillArrayBuffer(url);\n                yield this.libavifDecoder.decoderParse(this.avifFileArrayBuffer);\n                this.animationPlayback.initRender();\n                return;\n            }\n        });\n    }\n    /**\n     * 获取avif文件的Uint8Array数据\n     * @param url\n     * @returns\n     */\n    fillArrayBuffer(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof url === \"string\") {\n                return yield this.fetchFileArrayBuffer(url);\n            }\n            else if (url instanceof ArrayBuffer) {\n                return url;\n            }\n            else {\n                throw new Error(\"请传入文件Url或Uint8Array数据对象\");\n            }\n        });\n    }\n    fetchFileArrayBuffer(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield fetch(url);\n            return yield res.arrayBuffer();\n        });\n    }\n    /**\n     * 检查构造参数\n     * @param url\n     * @param option\n     */\n    checkConstructor(url, option) {\n        if (!url)\n            throw new Error(\"请传入Avif文件Url或Uint8Array文件数据\");\n        if (typeof option.canvas !== \"string\" &&\n            !(option.canvas instanceof HTMLCanvasElement))\n            throw new Error(\"请传入canvas元素ID或canvas DOM对象\");\n    }\n    /**\n     * 判断是否支持av1视频编码\n     * @returns\n     */\n    hasAv1Support() {\n        const vid = document.createElement(\"video\");\n        return vid.canPlayType('video/mp4; codecs=\"av01.0.05M.08\"') === \"probably\";\n    }\n    setCanvasSize() {\n        this.libavifDecoder.once(WorkerMessageType_1.DecoderChannel.avifParse, ({ width, height }) => {\n            this.option.canvas.width = width;\n            this.option.canvas.height = height;\n        });\n    }\n    /**\n     * 销毁解码器`Worker`线程\n     *\n     * 播放将暂停帧索引重置为0\n     */\n    destroy() {\n        this.emit(types_1.AvifPlayerWebChannel.destroy, {});\n        this.animationPlayback.destroy();\n        this.libavifDecoder.destroy();\n        this.libavifDecoder = null;\n    }\n}\nexports[\"default\"] = AvifPlayer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/AvifPlayer.ts\n");

/***/ }),

/***/ "./src/Decoder/LibavifDecoder.ts":
/*!***************************************!*\
  !*** ./src/Decoder/LibavifDecoder.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LibavifDecoder = void 0;\nconst WorkerMessageType_1 = __webpack_require__(/*! ../types/WorkerMessageType */ \"./src/types/WorkerMessageType.ts\");\nconst index_1 = __webpack_require__(/*! ./index */ \"./src/Decoder/index.ts\");\nclass LibavifDecoder extends index_1.MainEventEmitter {\n    /**\n     *\n     * @param url worker连接\n     * @param id 唯一资源标识\n     */\n    constructor(worker, id) {\n        super(worker);\n        this.id = id;\n        this.onmessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.initial, (version) => {\n            this.decoderInitial = true;\n            this.decoderVersion = version;\n        });\n        this.onmessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.decodingComplete, () => {\n            this.decoderImageComplete = true;\n        });\n        this.onmessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.error, (error) => {\n            this.emit(WorkerMessageType_1.DecoderChannel.error, error);\n        });\n        this.onmessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderConsole, (data) => {\n            console.log(data);\n        });\n    }\n    /**\n     * 解析&解码操作\n     * @param arrayBuffer\n     * @returns\n     */\n    decoderParse(arrayBuffer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.decoderParseComplete) {\n                yield this.avifDecoderParse(arrayBuffer);\n                return true;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    /**\n     * 解码指定帧数据\n     * @param frameIndex\n     * @returns\n     */\n    decoderNthImage(frameIndex) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.postMessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNthImage, {\n                    id: this.id,\n                    frameIndex,\n                });\n                this.onmessageOnce(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNthImageResult, (data, arrayBuffer) => {\n                    const decoderImageData = Object.assign(Object.assign({}, data), { pixels: arrayBuffer });\n                    resolve(decoderImageData);\n                });\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    /**\n     * 发送图像数据到Worker进行解码\n     * @param arrayBuffer\n     */\n    avifDecoderParse(arrayBuffer) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.onmessageOnce(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderParseComplete, ({ imageCount, width, height }) => {\n                    this.imageCount = imageCount;\n                    this.width = width;\n                    this.height = height;\n                    this.decoderParseComplete = true;\n                    this.emit(WorkerMessageType_1.DecoderChannel.avifParse, { imageCount, width, height });\n                    resolve(this.decoderImageComplete);\n                });\n                this.onmessageOnce(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.error, (error) => {\n                    reject(error);\n                });\n                this.postMessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderParse, {\n                    id: this.id,\n                }, arrayBuffer);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    avifDecoderAllImage() {\n        this.postMessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderImage, {\n            id: this.id,\n        });\n        this.onmessageOnce(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNextImage, (data) => {\n            console.log(data.index);\n        });\n    }\n    clearNthImageMessage() {\n        this.clearOnmessageAll(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNthImageResult);\n    }\n    /**\n     * 销毁解码器\n     */\n    destroy() {\n        this.clearAll();\n        this.clearOnmessageAll();\n        this.postMessage(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderDestroy, {});\n        this.worker = null;\n        this.emit(WorkerMessageType_1.DecoderChannel.destroy, {});\n    }\n}\nexports.LibavifDecoder = LibavifDecoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Decoder/LibavifDecoder.ts\n");

/***/ }),

/***/ "./src/Decoder/index.ts":
/*!******************************!*\
  !*** ./src/Decoder/index.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MainEventEmitter = exports.Decoder = void 0;\nconst Observer_1 = __webpack_require__(/*! ../Observer */ \"./src/Observer/index.ts\");\nconst WorkerMessageType_1 = __webpack_require__(/*! ../types/WorkerMessageType */ \"./src/types/WorkerMessageType.ts\");\nclass DecoderAbstract {\n}\nclass Decoder extends Observer_1.Observer {\n    constructor() {\n        super();\n        /**\n         * 所有帧已成功解码完成\n         */\n        this.decoderImageComplete = false;\n        /**\n         * 文件解析完成\n         */\n        this.decoderParseComplete = false;\n        /**\n         * 解码器初始化完成\n         */\n        this.decoderInitial = false;\n        /**\n         * 解码器版本\n         */\n        this.decoderVersion = \"\";\n        /**\n         * 帧数\n         */\n        this.imageCount = 0;\n        /**\n         * 图像宽度\n         */\n        this.width = 0;\n        /**\n         * 图像高度\n         */\n        this.height = 0;\n    }\n    decoderParse(arrayBuffer) {\n        return Promise.resolve(true);\n    }\n    decoderNthImage(frameIndex) {\n        return Promise.resolve({});\n    }\n    avifDecoderAllImage() { }\n    clearNthImageMessage() { }\n}\nexports.Decoder = Decoder;\nclass MainEventEmitter extends Decoder {\n    constructor(worker) {\n        super();\n        this.workerListeners = new Map();\n        this.setDecoder(worker);\n    }\n    /**\n     * 发送事件到Worker线程\n     * @param channel\n     * @param data\n     * @param args\n     */\n    postMessage(channel, data, arrayBuffer) {\n        if (data instanceof ArrayBuffer) {\n            this.worker.postMessage([channel, data], [data]);\n        }\n        else {\n            if (arrayBuffer instanceof ArrayBuffer) {\n                this.worker.postMessage([channel, data, arrayBuffer], [arrayBuffer]);\n            }\n            else {\n                this.worker.postMessage([channel, data]);\n            }\n        }\n    }\n    /**\n     * 为给定的Worker线程事件添加一次性侦听器。\n     * @param channel 频道\n     * @param handler 事件回调\n     * @returns\n     */\n    onmessageOnce(channel, handler) {\n        const _handle = (ev, arrayBuffer) => {\n            handler.call(this, ev, arrayBuffer);\n            this.clearOnmessage(channel, _handle);\n        };\n        this.onmessage(channel, _handle);\n        return this;\n    }\n    /**\n     * 清除Worker线程事件\n     * @param channel\n     * @param handler\n     * @returns\n     */\n    clearOnmessage(channel, handler) {\n        const handlers = this.workerListeners.get(channel);\n        if (handlers) {\n            handlers.delete(handler);\n            return;\n        }\n        return false;\n    }\n    /**\n     * 监听Worker线程发送的事件\n     * @param channel\n     * @param handler\n     */\n    onmessage(channel, handler) {\n        if (this.workerListeners.has(channel)) {\n            const listeners = this.workerListeners.get(channel);\n            listeners.add(handler);\n        }\n        else {\n            this.workerListeners.set(channel, new Set([handler]));\n        }\n    }\n    listenOnmessage(ev) {\n        const [channel, data, arrayBuffer] = ev.data;\n        if (this.workerListeners.has(channel)) {\n            const listeners = this.workerListeners.get(channel);\n            for (const listener of listeners) {\n                listener(data, arrayBuffer);\n            }\n        }\n    }\n    setDecoder(worker) {\n        this.worker = worker;\n        worker.postMessage([1, 1]);\n        this.worker.onmessage = (ev) => {\n            if (ev.data === 2) {\n                return this.emit(WorkerMessageType_1.DecoderChannel.WorkerCommunication, {});\n            }\n            this.listenOnmessage(ev);\n        };\n    }\n    clearOnmessageAll(channel) {\n        if (channel) {\n            this.workerListeners.delete(channel);\n        }\n        else {\n            this.workerListeners.clear();\n        }\n    }\n}\nexports.MainEventEmitter = MainEventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Decoder/index.ts\n");

/***/ }),

/***/ "./src/Observer/index.ts":
/*!*******************************!*\
  !*** ./src/Observer/index.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WorkerEventEmitter = exports.Observer = void 0;\nclass Observer {\n    constructor() {\n        this.eventListeners = new Map();\n    }\n    /**\n     * 监听事件\n     * @param channel\n     * @param handler\n     */\n    on(channel, handler) {\n        if (this.eventListeners.has(channel)) {\n            const listeners = this.eventListeners.get(channel);\n            listeners.add(handler);\n        }\n        else {\n            this.eventListeners.set(channel, new Set([handler]));\n        }\n        return this;\n    }\n    /**\n     * 发送事件\n     * @param channel\n     * @param data\n     */\n    emit(channel, data) {\n        if (this.eventListeners.has(channel)) {\n            const listeners = this.eventListeners.get(channel);\n            for (const listener of listeners) {\n                listener(data);\n            }\n        }\n        return this;\n    }\n    /**\n     * 为给定事件添加一次性监听器。\n     * @param channel 频道\n     * @param listener 事件回调\n     * @returns\n     */\n    once(channel, handler) {\n        const _handle = (ev, arrayBuffer) => {\n            this.clear(channel, _handle);\n            handler.call(this, ev, arrayBuffer);\n        };\n        this.on(channel, _handle);\n        return this;\n    }\n    /**\n     * 删除监听的事件\n     * @param channel\n     * @param handler\n     * @returns\n     */\n    clear(channel, handler) {\n        const handlers = this.eventListeners.get(channel);\n        if (handlers) {\n            return handlers.delete(handler);\n        }\n        return false;\n    }\n    clearAll(channel) {\n        if (channel) {\n            this.eventListeners.delete(channel);\n        }\n        else {\n            this.eventListeners.clear();\n        }\n    }\n}\nexports.Observer = Observer;\nclass WorkerEventEmitter {\n    constructor() {\n        this.eventListeners = new Map();\n        onmessage = (...args) => {\n            this.listen(...args);\n        };\n    }\n    send(channel, data, arrayBuffer) {\n        if (data instanceof ArrayBuffer) {\n            postMessage([channel, data], [data]);\n        }\n        else {\n            if (arrayBuffer instanceof ArrayBuffer) {\n                postMessage([channel, data, arrayBuffer], [arrayBuffer]);\n            }\n            else {\n                postMessage([channel, data]);\n            }\n        }\n    }\n    on(channel, handler) {\n        if (this.eventListeners.has(channel)) {\n            const listeners = this.eventListeners.get(channel);\n            listeners.add(handler);\n        }\n        else {\n            this.eventListeners.set(channel, new Set([handler]));\n        }\n    }\n    /**\n     * 为给定事件添加一次性侦听器。\n     * @param channel 频道\n     * @param listener 事件回调\n     * @returns\n     */\n    once(channel, handler) {\n        const _handle = (ev, arrayBuffer) => {\n            this.clear(channel, _handle);\n            handler.call(this, ev, arrayBuffer);\n        };\n        this.on(channel, _handle);\n        return this;\n    }\n    clear(channel, handler) {\n        const handlers = this.eventListeners.get(channel);\n        if (handlers) {\n            return handlers.delete(handler);\n        }\n        return false;\n    }\n    listen(ev) {\n        const [channel, data, arrayBuffer] = ev.data;\n        if (this.eventListeners.has(channel)) {\n            const listeners = this.eventListeners.get(channel);\n            for (const listener of listeners) {\n                listener(data, arrayBuffer);\n            }\n        }\n    }\n}\nexports.WorkerEventEmitter = WorkerEventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Observer/index.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst AvifPlayer_1 = __importDefault(__webpack_require__(/*! ./AvifPlayer */ \"./src/AvifPlayer.ts\"));\nconst index_1 = __webpack_require__(/*! ./types/index */ \"./src/types/index.ts\");\nexports[\"default\"] = {\n    AvifPlayer: AvifPlayer_1.default,\n    AvifPlayerWebChannel: index_1.AvifPlayerWebChannel,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxxR0FBc0M7QUFDdEMsaUZBQXFEO0FBRXJELHFCQUFlO0lBQ2IsVUFBVSxFQUFWLG9CQUFVO0lBQ1Ysb0JBQW9CLEVBQXBCLDRCQUFvQjtDQUNyQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZpZlBsYXllcldlYi8uL3NyYy9pbmRleC50cz9mZmI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBdmlmUGxheWVyIGZyb20gXCIuL0F2aWZQbGF5ZXJcIjtcclxuaW1wb3J0IHsgQXZpZlBsYXllcldlYkNoYW5uZWwgfSBmcm9tIFwiLi90eXBlcy9pbmRleFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIEF2aWZQbGF5ZXIsXHJcbiAgQXZpZlBsYXllcldlYkNoYW5uZWwsXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/types/WorkerMessageType.ts":
/*!****************************************!*\
  !*** ./src/types/WorkerMessageType.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecoderChannel = exports.WorkerAvifDecoderMessageChannel = void 0;\nvar WorkerAvifDecoderMessageChannel;\n(function (WorkerAvifDecoderMessageChannel) {\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"error\"] = 0] = \"error\";\n    /**\n     * worker解码器初始化完成\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"initial\"] = 1] = \"initial\";\n    /**\n     * 提交Uint8Array数据到worker线程解码\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderParse\"] = 2] = \"avifDecoderParse\";\n    /**\n     * 每帧解码数据完成\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderNextImage\"] = 3] = \"avifDecoderNextImage\";\n    /**\n     * 所有图像数据解码完成\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"decodingComplete\"] = 4] = \"decodingComplete\";\n    /**\n     * Avif文件解析完成\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderParseComplete\"] = 5] = \"avifDecoderParseComplete\";\n    /**\n     * 解码所有帧数据\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderImage\"] = 6] = \"avifDecoderImage\";\n    /**\n     * 解码指定帧数据\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderNthImage\"] = 7] = \"avifDecoderNthImage\";\n    /**\n     * 解码指定帧数据解码完成\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderNthImageResult\"] = 8] = \"avifDecoderNthImageResult\";\n    /**\n     * 销毁解码器\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderDestroy\"] = 9] = \"avifDecoderDestroy\";\n    /**\n     * 输出\n     */\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\"avifDecoderConsole\"] = 10] = \"avifDecoderConsole\";\n})(WorkerAvifDecoderMessageChannel || (exports.WorkerAvifDecoderMessageChannel = WorkerAvifDecoderMessageChannel = {}));\nvar DecoderChannel;\n(function (DecoderChannel) {\n    /**\n     * 和Workers线程建立通信\n     */\n    DecoderChannel[DecoderChannel[\"WorkerCommunication\"] = -1] = \"WorkerCommunication\";\n    DecoderChannel[DecoderChannel[\"error\"] = 0] = \"error\";\n    DecoderChannel[DecoderChannel[\"nextImage\"] = 1] = \"nextImage\";\n    DecoderChannel[DecoderChannel[\"avifParse\"] = 2] = \"avifParse\";\n    DecoderChannel[DecoderChannel[\"firstFrameDecode\"] = 3] = \"firstFrameDecode\";\n    /**\n     * 所有图像数据解码完成\n     */\n    DecoderChannel[DecoderChannel[\"decodeComplete\"] = 4] = \"decodeComplete\";\n    /**\n     * 销毁解码器\n     */\n    DecoderChannel[DecoderChannel[\"destroy\"] = 5] = \"destroy\";\n})(DecoderChannel || (exports.DecoderChannel = DecoderChannel = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMvV29ya2VyTWVzc2FnZVR5cGUudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBWSwrQkEwQ1g7QUExQ0QsV0FBWSwrQkFBK0I7SUFDekMsdUZBQVM7SUFDVDs7T0FFRztJQUNILDJGQUFXO0lBQ1g7O09BRUc7SUFDSCw2R0FBb0I7SUFDcEI7O09BRUc7SUFDSCxxSEFBd0I7SUFDeEI7O09BRUc7SUFDSCw2R0FBb0I7SUFDcEI7O09BRUc7SUFDSCw2SEFBNEI7SUFDNUI7O09BRUc7SUFDSCw2R0FBb0I7SUFDcEI7O09BRUc7SUFDSCxtSEFBdUI7SUFDdkI7O09BRUc7SUFDSCwrSEFBNkI7SUFDN0I7O09BRUc7SUFDSCxpSEFBc0I7SUFDdEI7O09BRUc7SUFDSCxrSEFBdUI7QUFDekIsQ0FBQyxFQTFDVywrQkFBK0IsK0NBQS9CLCtCQUErQixRQTBDMUM7QUFDRCxJQUFZLGNBaUJYO0FBakJELFdBQVksY0FBYztJQUN4Qjs7T0FFRztJQUNILGtGQUF3QjtJQUN4QixxREFBUztJQUNULDZEQUFhO0lBQ2IsNkRBQWE7SUFDYiwyRUFBb0I7SUFDcEI7O09BRUc7SUFDSCx1RUFBa0I7SUFDbEI7O09BRUc7SUFDSCx5REFBVztBQUNiLENBQUMsRUFqQlcsY0FBYyw4QkFBZCxjQUFjLFFBaUJ6QiIsInNvdXJjZXMiOlsid2VicGFjazovL0F2aWZQbGF5ZXJXZWIvLi9zcmMvdHlwZXMvV29ya2VyTWVzc2FnZVR5cGUudHM/NWU4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsIHtcclxuICBlcnJvciA9IDAsXHJcbiAgLyoqXHJcbiAgICogd29ya2Vy6Kej56CB5Zmo5Yid5aeL5YyW5a6M5oiQXHJcbiAgICovXHJcbiAgaW5pdGlhbCA9IDEsXHJcbiAgLyoqXHJcbiAgICog5o+Q5LqkVWludDhBcnJheeaVsOaNruWIsHdvcmtlcue6v+eoi+ino+eggVxyXG4gICAqL1xyXG4gIGF2aWZEZWNvZGVyUGFyc2UgPSAyLFxyXG4gIC8qKlxyXG4gICAqIOavj+W4p+ino+eggeaVsOaNruWujOaIkFxyXG4gICAqL1xyXG4gIGF2aWZEZWNvZGVyTmV4dEltYWdlID0gMyxcclxuICAvKipcclxuICAgKiDmiYDmnInlm77lg4/mlbDmja7op6PnoIHlrozmiJBcclxuICAgKi9cclxuICBkZWNvZGluZ0NvbXBsZXRlID0gNCxcclxuICAvKipcclxuICAgKiBBdmlm5paH5Lu26Kej5p6Q5a6M5oiQXHJcbiAgICovXHJcbiAgYXZpZkRlY29kZXJQYXJzZUNvbXBsZXRlID0gNSxcclxuICAvKipcclxuICAgKiDop6PnoIHmiYDmnInluKfmlbDmja5cclxuICAgKi9cclxuICBhdmlmRGVjb2RlckltYWdlID0gNixcclxuICAvKipcclxuICAgKiDop6PnoIHmjIflrprluKfmlbDmja5cclxuICAgKi9cclxuICBhdmlmRGVjb2Rlck50aEltYWdlID0gNyxcclxuICAvKipcclxuICAgKiDop6PnoIHmjIflrprluKfmlbDmja7op6PnoIHlrozmiJBcclxuICAgKi9cclxuICBhdmlmRGVjb2Rlck50aEltYWdlUmVzdWx0ID0gOCxcclxuICAvKipcclxuICAgKiDplIDmr4Hop6PnoIHlmahcclxuICAgKi9cclxuICBhdmlmRGVjb2RlckRlc3Ryb3kgPSA5LFxyXG4gIC8qKlxyXG4gICAqIOi+k+WHulxyXG4gICAqL1xyXG4gIGF2aWZEZWNvZGVyQ29uc29sZSA9IDEwLFxyXG59XHJcbmV4cG9ydCBlbnVtIERlY29kZXJDaGFubmVsIHtcclxuICAvKipcclxuICAgKiDlkoxXb3JrZXJz57q/56iL5bu656uL6YCa5L+hXHJcbiAgICovXHJcbiAgV29ya2VyQ29tbXVuaWNhdGlvbiA9IC0xLFxyXG4gIGVycm9yID0gMCxcclxuICBuZXh0SW1hZ2UgPSAxLFxyXG4gIGF2aWZQYXJzZSA9IDIsXHJcbiAgZmlyc3RGcmFtZURlY29kZSA9IDMsXHJcbiAgLyoqXHJcbiAgICog5omA5pyJ5Zu+5YOP5pWw5o2u6Kej56CB5a6M5oiQXHJcbiAgICovXHJcbiAgZGVjb2RlQ29tcGxldGUgPSA0LFxyXG4gIC8qKlxyXG4gICAqIOmUgOavgeino+eggeWZqFxyXG4gICAqL1xyXG4gIGRlc3Ryb3kgPSA1LFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERlY29kZXJFdmVudE1hcCB7XHJcbiAgW0RlY29kZXJDaGFubmVsLmVycm9yXTogRXJyb3IgfCBFcnJvckV2ZW50O1xyXG4gIFtEZWNvZGVyQ2hhbm5lbC5uZXh0SW1hZ2VdOiBEZWNvZGVyQXZpZkltYWdlRGF0YTtcclxuICBbRGVjb2RlckNoYW5uZWwuYXZpZlBhcnNlXTogQXZpZlBhcnNlRGF0YTtcclxuICBbRGVjb2RlckNoYW5uZWwuZGVjb2RlQ29tcGxldGVdOiB7fTtcclxuICBbRGVjb2RlckNoYW5uZWwuZGVzdHJveV06IHt9O1xyXG4gIFtEZWNvZGVyQ2hhbm5lbC5Xb3JrZXJDb21tdW5pY2F0aW9uXToge307XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZlBhcnNlRGF0YSB7XHJcbiAgLyoqXHJcbiAgICog5Zu+5YOP5a695bqmXHJcbiAgICovXHJcbiAgd2lkdGg6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDlm77lg4/pq5jluqZcclxuICAgKi9cclxuICBoZWlnaHQ6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDluKfmlbBcclxuICAgKi9cclxuICBpbWFnZUNvdW50OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZkRlY29kZXJQYXJzZUNvbXBsZXRlIGV4dGVuZHMgQXZpZlBhcnNlRGF0YSB7fVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBdmlmRGVjb2Rlck5leHRJbWFnZURhdGEge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgICog5bin57Si5byVXHJcbiAgICovXHJcbiAgaW5kZXg6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDlm77lg4/lrr3luqZcclxuICAgKi9cclxuICB3aWR0aDogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIOWbvuWDj+mrmOW6plxyXG4gICAqL1xyXG4gIGhlaWdodDogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIOWDj+e0oOS9jea3seW6pls4LCAxMCwgMTIsIDE2XeOAguWmguaenOa3seW6puWkp+S6jjjvvIzliJnlg4/ntKDlnKjlhoXpg6jlv4XpobvmmK91aW50MTZfdOexu+Wei+OAglxyXG4gICAqL1xyXG4gIGRlcHRoOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5aqS5L2T55qE5pe26Ze05Yi75bqm77yI6LWr5YW577yJXHJcbiAgICovXHJcbiAgdGltZXNjYWxlOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5Lul56eS5Li65Y2V5L2N55qE5bGV56S65pe26Ze05oiz77yIcHRzSW5UaW1lc2NhbGVzIC8gdGltZXNjYWxl77yJXHJcbiAgICovXHJcbiAgcHRzOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5bGV56S65pe26Ze05oiz77yI5LulXCJ0aW1lY2FsZXNcIuS4uuWNleS9je+8iVxyXG4gICAqL1xyXG4gIHB0c0luVGltZXNjYWxlczogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIOS7peenkuS4uuWNleS9jeeahOaMgee7reaXtumXtO+8iGR1cmF0aW9uSW5UaW1lc2NhbGVzIC8gdGltZXNjYWxl77yJXHJcbiAgICovXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICAvKipcclxuICAgKiDmjIHnu63ml7bpl7TvvIjku6VcInRpbWVjYWxlc1wi5Li65Y2V5L2N77yJXHJcbiAgICovXHJcbiAgZHVyYXRpb25JblRpbWVzY2FsZXM6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDop6PnoIHml7bpl7RcclxuICAgKi9cclxuICBkZWNvZGVUaW1lOiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmr4/luKflm77lg4/mlbDmja5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGVjb2RlckltYWdlRGF0YSBleHRlbmRzIEF2aWZEZWNvZGVyTmV4dEltYWdlRGF0YSB7XHJcbiAgLyoqXHJcbiAgICog5YOP57Sg6ZuG5ZCIXHJcbiAgICovXHJcbiAgcGl4ZWxzOiBBcnJheUJ1ZmZlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEZWNvZGVyQXZpZkltYWdlRGF0YSBleHRlbmRzIERlY29kZXJJbWFnZURhdGEge31cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZkRlY29kZXJQYXJzZURhdGEge1xyXG4gIC8qKlxyXG4gICAqIOWUr+S4gOi1hOa6kOagh+ivhlxyXG4gICAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZkRlY29kZXJOdGhJbWFnZURhdGEge1xyXG4gIC8qKlxyXG4gICAqIOWUr+S4gOi1hOa6kOagh+ivhlxyXG4gICAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgICog5bin57Si5byVXHJcbiAgICovXHJcbiAgZnJhbWVJbmRleDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFdvcmtlckF2aWZEZWNvZGVyRXZlbnRNYXAge1xyXG4gIFtXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsLmF2aWZEZWNvZGVyUGFyc2VdOiBBdmlmRGVjb2RlclBhcnNlRGF0YTtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2Rlck5leHRJbWFnZV06IEF2aWZEZWNvZGVyTmV4dEltYWdlRGF0YTtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5pbml0aWFsXTogc3RyaW5nO1xyXG4gIFtXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsLmRlY29kaW5nQ29tcGxldGVdOiB7fTtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2RlclBhcnNlQ29tcGxldGVdOiBBdmlmRGVjb2RlclBhcnNlQ29tcGxldGU7XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuZXJyb3JdOiBFcnJvcjtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2RlckltYWdlXTogeyBpZDogc3RyaW5nIH07XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuYXZpZkRlY29kZXJOdGhJbWFnZV06IEF2aWZEZWNvZGVyTnRoSW1hZ2VEYXRhO1xyXG4gIFtXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsLmF2aWZEZWNvZGVyTnRoSW1hZ2VSZXN1bHRdOiBBdmlmRGVjb2Rlck5leHRJbWFnZURhdGE7XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuYXZpZkRlY29kZXJEZXN0cm95XToge307XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuYXZpZkRlY29kZXJDb25zb2xlXToge307XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/types/WorkerMessageType.ts\n");

/***/ }),

/***/ "./src/types/index.ts":
/*!****************************!*\
  !*** ./src/types/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvifPlayerWebChannel = void 0;\nvar AvifPlayerWebChannel;\n(function (AvifPlayerWebChannel) {\n    /**\n     * 错误\n     */\n    AvifPlayerWebChannel[\"error\"] = \"error\";\n    /**\n     * 播放\n     */\n    AvifPlayerWebChannel[\"play\"] = \"play\";\n    /**\n     * 播放暂停\n     */\n    AvifPlayerWebChannel[\"pause\"] = \"pause\";\n    /**\n     * 播放结束\n     */\n    AvifPlayerWebChannel[\"end\"] = \"end\";\n    /**\n     * 当前帧发生变化\n     */\n    AvifPlayerWebChannel[\"frameIndexChange\"] = \"frameIndexChange\";\n    /**\n     * 解码器即将销毁\n     */\n    AvifPlayerWebChannel[\"destroy\"] = \"destroy\";\n})(AvifPlayerWebChannel || (exports.AvifPlayerWebChannel = AvifPlayerWebChannel = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7O0FBSUEsSUFBWSxvQkF5Qlg7QUF6QkQsV0FBWSxvQkFBb0I7SUFDOUI7O09BRUc7SUFDSCx1Q0FBZTtJQUNmOztPQUVHO0lBQ0gscUNBQWE7SUFDYjs7T0FFRztJQUNILHVDQUFlO0lBQ2Y7O09BRUc7SUFDSCxtQ0FBVztJQUNYOztPQUVHO0lBQ0gsNkRBQXFDO0lBQ3JDOztPQUVHO0lBQ0gsMkNBQW1CO0FBQ3JCLENBQUMsRUF6Qlcsb0JBQW9CLG9DQUFwQixvQkFBb0IsUUF5Qi9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZpZlBsYXllcldlYi8uL3NyYy90eXBlcy9pbmRleC50cz9lYmUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZyYW1lSW5kZXhDaGFuZ2VFdmVudCB9IGZyb20gXCIuLi9BbmltYXRpb25QbGF5YmFjay90eXBlXCI7XHJcblxyXG5leHBvcnQgdHlwZSBNZXNzYWdlRXZlbnRUeXBlPFQsIEU+ID0gW1QsIEUsIEFycmF5QnVmZmVyIHwgdW5kZWZpbmVkXTtcclxuXHJcbmV4cG9ydCBlbnVtIEF2aWZQbGF5ZXJXZWJDaGFubmVsIHtcclxuICAvKipcclxuICAgKiDplJnor69cclxuICAgKi9cclxuICBlcnJvciA9IFwiZXJyb3JcIixcclxuICAvKipcclxuICAgKiDmkq3mlL5cclxuICAgKi9cclxuICBwbGF5ID0gXCJwbGF5XCIsXHJcbiAgLyoqXHJcbiAgICog5pKt5pS+5pqC5YGcXHJcbiAgICovXHJcbiAgcGF1c2UgPSBcInBhdXNlXCIsXHJcbiAgLyoqXHJcbiAgICog5pKt5pS+57uT5p2fXHJcbiAgICovXHJcbiAgZW5kID0gXCJlbmRcIixcclxuICAvKipcclxuICAgKiDlvZPliY3luKflj5HnlJ/lj5jljJZcclxuICAgKi9cclxuICBmcmFtZUluZGV4Q2hhbmdlID0gXCJmcmFtZUluZGV4Q2hhbmdlXCIsXHJcbiAgLyoqXHJcbiAgICog6Kej56CB5Zmo5Y2z5bCG6ZSA5q+BXHJcbiAgICovXHJcbiAgZGVzdHJveSA9IFwiZGVzdHJveVwiLFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEF2aWZQbGF5ZXJXZWJFdmVudE1hcCB7XHJcbiAgW0F2aWZQbGF5ZXJXZWJDaGFubmVsLmVycm9yXTogRXJyb3IgfCBFcnJvckV2ZW50O1xyXG4gIFtBdmlmUGxheWVyV2ViQ2hhbm5lbC5wbGF5XTogYm9vbGVhbjtcclxuICBbQXZpZlBsYXllcldlYkNoYW5uZWwuZW5kXTogYm9vbGVhbjtcclxuICBbQXZpZlBsYXllcldlYkNoYW5uZWwucGF1c2VdOiBib29sZWFuO1xyXG4gIFtBdmlmUGxheWVyV2ViQ2hhbm5lbC5mcmFtZUluZGV4Q2hhbmdlXTogRnJhbWVJbmRleENoYW5nZUV2ZW50O1xyXG4gIFtBdmlmUGxheWVyV2ViQ2hhbm5lbC5kZXN0cm95XToge307XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/types/index.ts\n");

/***/ }),

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isNumeric = exports.sleep = exports.timeout = exports.deepMixins = void 0;\n/**\n * # 深度混入\n * `obj1`混入`obj2`中\n * ## Example\n * 给一个对象赋予默认值\n *\n * 如果`options`不存在`buttons`，则`obj1`的`buttons`的值就是输出对象`this.options`的`buttons`值\n * ```ts\n * this.options = deepMixins(\n      options,\n      {\n        buttons: [],\n      }\n    );\n * ```\n * @param obj1 原始对象\n * @param obj2 混入对象\n * @returns\n */\nfunction deepMixins(obj2, obj1) {\n    let key;\n    for (key in obj2) {\n        obj1[key] =\n            obj1[key] &&\n                obj1[key].toString() === \"[object Object]\" &&\n                obj2[key] &&\n                obj2[key].toString() === \"[object Object]\"\n                ? deepMixins(obj1[key], obj2[key])\n                : obj2[key] === undefined\n                    ? (obj2[key] = obj1[key])\n                    : (obj1[key] = obj2[key]);\n    }\n    return obj1;\n}\nexports.deepMixins = deepMixins;\n/**\n * 基于 [requestAnimationFrame](https://developer.mozilla.org/zh-CN/docs/Web/API/window/requestAnimationFrame) 实现的定时器\n * @param callback\n * @param ms\n */\nfunction timeout(callback, ms = 0) {\n    let start;\n    function step(timestamp) {\n        if (start === undefined)\n            start = timestamp;\n        const elapsed = timestamp - start;\n        if (elapsed < ms) {\n            window.requestAnimationFrame(step);\n        }\n        else {\n            return callback(elapsed);\n        }\n    }\n    window.requestAnimationFrame(step);\n}\nexports.timeout = timeout;\nfunction sleep(delay) {\n    return new Promise((resolve) => {\n        timeout(resolve, delay);\n    });\n}\nexports.sleep = sleep;\nfunction isNumeric(num) {\n    return typeof num === \"number\";\n}\nexports.isNumeric = isNumeric;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCRztBQUNILFNBQWdCLFVBQVUsQ0FDeEIsSUFBTyxFQUNQLElBQTRCO0lBRTVCLElBQUksR0FBRyxDQUFDO0lBQ1IsS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLEdBQUcsQ0FBQztZQUNQLElBQUksQ0FBQyxHQUFHLENBQUM7Z0JBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxLQUFLLGlCQUFpQjtnQkFDMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztnQkFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLEtBQUssaUJBQWlCO2dCQUN4QyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2xDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssU0FBUztvQkFDdkIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQWMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDcEMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxPQUFPLElBQVMsQ0FBQztBQUNuQixDQUFDO0FBakJELGdDQWlCQztBQUVEOzs7O0dBSUc7QUFDSCxTQUFnQixPQUFPLENBQUMsUUFBbUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztJQUNqRSxJQUFJLEtBQWEsQ0FBQztJQUNsQixTQUFTLElBQUksQ0FBQyxTQUFpQjtRQUM3QixJQUFJLEtBQUssS0FBSyxTQUFTO1lBQUUsS0FBSyxHQUFHLFNBQVMsQ0FBQztRQUMzQyxNQUFNLE9BQU8sR0FBRyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLElBQUksT0FBTyxHQUFHLEVBQUUsRUFBRSxDQUFDO1lBQ2pCLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxDQUFDO2FBQU0sQ0FBQztZQUNOLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzNCLENBQUM7SUFDSCxDQUFDO0lBQ0QsTUFBTSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3JDLENBQUM7QUFaRCwwQkFZQztBQUVELFNBQWdCLEtBQUssQ0FBQyxLQUFhO0lBQ2pDLE9BQU8sSUFBSSxPQUFPLENBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUNyQyxPQUFPLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUpELHNCQUlDO0FBRUQsU0FBZ0IsU0FBUyxDQUFDLEdBQVc7SUFDbkMsT0FBTyxPQUFPLEdBQUcsS0FBSyxRQUFRLENBQUM7QUFDakMsQ0FBQztBQUZELDhCQUVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZpZlBsYXllcldlYi8uL3NyYy91dGlscy9pbmRleC50cz9kMjU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiAjIOa3seW6pua3t+WFpVxyXG4gKiBgb2JqMWDmt7flhaVgb2JqMmDkuK1cclxuICogIyMgRXhhbXBsZVxyXG4gKiDnu5nkuIDkuKrlr7nosaHotYvkuojpu5jorqTlgLxcclxuICogXHJcbiAqIOWmguaenGBvcHRpb25zYOS4jeWtmOWcqGBidXR0b25zYO+8jOWImWBvYmoxYOeahGBidXR0b25zYOeahOWAvOWwseaYr+i+k+WHuuWvueixoWB0aGlzLm9wdGlvbnNg55qEYGJ1dHRvbnNg5YC8XHJcbiAqIGBgYHRzXHJcbiAqIHRoaXMub3B0aW9ucyA9IGRlZXBNaXhpbnMoXHJcbiAgICAgIG9wdGlvbnMsXHJcbiAgICAgIHtcclxuICAgICAgICBidXR0b25zOiBbXSxcclxuICAgICAgfVxyXG4gICAgKTtcclxuICogYGBgXHJcbiAqIEBwYXJhbSBvYmoxIOWOn+Wni+WvueixoVxyXG4gKiBAcGFyYW0gb2JqMiDmt7flhaXlr7nosaFcclxuICogQHJldHVybnNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBkZWVwTWl4aW5zPFQgZXh0ZW5kcyB7IFtrZXk6IHN0cmluZ106IGFueSB9PihcclxuICBvYmoyOiBULFxyXG4gIG9iajE6IHsgW2tleTogc3RyaW5nXTogYW55IH1cclxuKTogVCB7XHJcbiAgbGV0IGtleTtcclxuICBmb3IgKGtleSBpbiBvYmoyKSB7XHJcbiAgICBvYmoxW2tleV0gPVxyXG4gICAgICBvYmoxW2tleV0gJiZcclxuICAgICAgb2JqMVtrZXldLnRvU3RyaW5nKCkgPT09IFwiW29iamVjdCBPYmplY3RdXCIgJiZcclxuICAgICAgb2JqMltrZXldICYmXHJcbiAgICAgIG9iajJba2V5XS50b1N0cmluZygpID09PSBcIltvYmplY3QgT2JqZWN0XVwiXHJcbiAgICAgICAgPyBkZWVwTWl4aW5zKG9iajFba2V5XSwgb2JqMltrZXldKVxyXG4gICAgICAgIDogb2JqMltrZXldID09PSB1bmRlZmluZWRcclxuICAgICAgICAgID8gKG9iajJba2V5IGFzIGtleW9mIFRdID0gb2JqMVtrZXldKVxyXG4gICAgICAgICAgOiAob2JqMVtrZXldID0gb2JqMltrZXldKTtcclxuICB9XHJcbiAgcmV0dXJuIG9iajEgYXMgVDtcclxufVxyXG5cclxuLyoqXHJcbiAqIOWfuuS6jiBbcmVxdWVzdEFuaW1hdGlvbkZyYW1lXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy96aC1DTi9kb2NzL1dlYi9BUEkvd2luZG93L3JlcXVlc3RBbmltYXRpb25GcmFtZSkg5a6e546w55qE5a6a5pe25ZmoXHJcbiAqIEBwYXJhbSBjYWxsYmFja1xyXG4gKiBAcGFyYW0gbXNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0aW1lb3V0KGNhbGxiYWNrOiAoZWxhcHNlZDogbnVtYmVyKSA9PiB2b2lkLCBtcyA9IDApIHtcclxuICBsZXQgc3RhcnQ6IG51bWJlcjtcclxuICBmdW5jdGlvbiBzdGVwKHRpbWVzdGFtcDogbnVtYmVyKSB7XHJcbiAgICBpZiAoc3RhcnQgPT09IHVuZGVmaW5lZCkgc3RhcnQgPSB0aW1lc3RhbXA7XHJcbiAgICBjb25zdCBlbGFwc2VkID0gdGltZXN0YW1wIC0gc3RhcnQ7XHJcbiAgICBpZiAoZWxhcHNlZCA8IG1zKSB7XHJcbiAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gY2FsbGJhY2soZWxhcHNlZCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzbGVlcChkZWxheTogbnVtYmVyKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlPG51bWJlcj4oKHJlc29sdmUpID0+IHtcclxuICAgIHRpbWVvdXQocmVzb2x2ZSwgZGVsYXkpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1lcmljKG51bTogbnVtYmVyKSB7XHJcbiAgcmV0dXJuIHR5cGVvZiBudW0gPT09IFwibnVtYmVyXCI7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/index.ts\n");

/***/ }),

/***/ "./src/Worker/main.worker.ts":
/*!***********************************!*\
  !*** ./src/Worker/main.worker.ts ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar worker = __webpack_require__(/*! !!../../node_modules/worker-loader/dist/runtime/inline.js */ \"./node_modules/worker-loader/dist/runtime/inline.js\");\n\nmodule.exports = function Worker_fn() {\n  return worker(\"/*\\n * ATTENTION: An \\\"eval-source-map\\\" devtool has been used.\\n * This devtool is neither made for production nor for readable output files.\\n * It uses \\\"eval()\\\" calls to create a separate source file with attached SourceMaps in the browser devtools.\\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\\n * or disable the default devtool with \\\"devtool: false\\\".\\n * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/).\\n */\\n/******/ (() => { // webpackBootstrap\\n/******/ \\t\\\"use strict\\\";\\n/******/ \\tvar __webpack_modules__ = ({\\n\\n/***/ \\\"./src/Observer/index.ts\\\":\\n/*!*******************************!*\\\\\\n  !*** ./src/Observer/index.ts ***!\\n  \\\\*******************************/\\n/***/ ((__unused_webpack_module, exports) => {\\n\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", ({ value: true }));\\\\nexports.WorkerEventEmitter = exports.Observer = void 0;\\\\nclass Observer {\\\\n    constructor() {\\\\n        this.eventListeners = new Map();\\\\n    }\\\\n    /**\\\\n     * 监听事件\\\\n     * @param channel\\\\n     * @param handler\\\\n     */\\\\n    on(channel, handler) {\\\\n        if (this.eventListeners.has(channel)) {\\\\n            const listeners = this.eventListeners.get(channel);\\\\n            listeners.add(handler);\\\\n        }\\\\n        else {\\\\n            this.eventListeners.set(channel, new Set([handler]));\\\\n        }\\\\n        return this;\\\\n    }\\\\n    /**\\\\n     * 发送事件\\\\n     * @param channel\\\\n     * @param data\\\\n     */\\\\n    emit(channel, data) {\\\\n        if (this.eventListeners.has(channel)) {\\\\n            const listeners = this.eventListeners.get(channel);\\\\n            for (const listener of listeners) {\\\\n                listener(data);\\\\n            }\\\\n        }\\\\n        return this;\\\\n    }\\\\n    /**\\\\n     * 为给定事件添加一次性监听器。\\\\n     * @param channel 频道\\\\n     * @param listener 事件回调\\\\n     * @returns\\\\n     */\\\\n    once(channel, handler) {\\\\n        const _handle = (ev, arrayBuffer) => {\\\\n            this.clear(channel, _handle);\\\\n            handler.call(this, ev, arrayBuffer);\\\\n        };\\\\n        this.on(channel, _handle);\\\\n        return this;\\\\n    }\\\\n    /**\\\\n     * 删除监听的事件\\\\n     * @param channel\\\\n     * @param handler\\\\n     * @returns\\\\n     */\\\\n    clear(channel, handler) {\\\\n        const handlers = this.eventListeners.get(channel);\\\\n        if (handlers) {\\\\n            return handlers.delete(handler);\\\\n        }\\\\n        return false;\\\\n    }\\\\n    clearAll(channel) {\\\\n        if (channel) {\\\\n            this.eventListeners.delete(channel);\\\\n        }\\\\n        else {\\\\n            this.eventListeners.clear();\\\\n        }\\\\n    }\\\\n}\\\\nexports.Observer = Observer;\\\\nclass WorkerEventEmitter {\\\\n    constructor() {\\\\n        this.eventListeners = new Map();\\\\n        onmessage = (...args) => {\\\\n            this.listen(...args);\\\\n        };\\\\n    }\\\\n    send(channel, data, arrayBuffer) {\\\\n        if (data instanceof ArrayBuffer) {\\\\n            postMessage([channel, data], [data]);\\\\n        }\\\\n        else {\\\\n            if (arrayBuffer instanceof ArrayBuffer) {\\\\n                postMessage([channel, data, arrayBuffer], [arrayBuffer]);\\\\n            }\\\\n            else {\\\\n                postMessage([channel, data]);\\\\n            }\\\\n        }\\\\n    }\\\\n    on(channel, handler) {\\\\n        if (this.eventListeners.has(channel)) {\\\\n            const listeners = this.eventListeners.get(channel);\\\\n            listeners.add(handler);\\\\n        }\\\\n        else {\\\\n            this.eventListeners.set(channel, new Set([handler]));\\\\n        }\\\\n    }\\\\n    /**\\\\n     * 为给定事件添加一次性侦听器。\\\\n     * @param channel 频道\\\\n     * @param listener 事件回调\\\\n     * @returns\\\\n     */\\\\n    once(channel, handler) {\\\\n        const _handle = (ev, arrayBuffer) => {\\\\n            this.clear(channel, _handle);\\\\n            handler.call(this, ev, arrayBuffer);\\\\n        };\\\\n        this.on(channel, _handle);\\\\n        return this;\\\\n    }\\\\n    clear(channel, handler) {\\\\n        const handlers = this.eventListeners.get(channel);\\\\n        if (handlers) {\\\\n            return handlers.delete(handler);\\\\n        }\\\\n        return false;\\\\n    }\\\\n    listen(ev) {\\\\n        const [channel, data, arrayBuffer] = ev.data;\\\\n        if (this.eventListeners.has(channel)) {\\\\n            const listeners = this.eventListeners.get(channel);\\\\n            for (const listener of listeners) {\\\\n                listener(data, arrayBuffer);\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\\nexports.WorkerEventEmitter = WorkerEventEmitter;\\\\n//# sourceURL=[module]\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/Worker/Libavif.ts\\\":\\n/*!*******************************!*\\\\\\n  !*** ./src/Worker/Libavif.ts ***!\\n  \\\\*******************************/\\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\\n\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", ({ value: true }));\\\\nconst WorkerMessageType_1 = __webpack_require__(/*! ../types/WorkerMessageType */ \\\\\\\"./src/types/WorkerMessageType.ts\\\\\\\");\\\\nconst index_1 = __webpack_require__(/*! ../Observer/index */ \\\\\\\"./src/Observer/index.ts\\\\\\\");\\\\nconst type_1 = __webpack_require__(/*! ./type */ \\\\\\\"./src/Worker/type.ts\\\\\\\");\\\\nconst AVIF_RGB_IMAGE_STRUCT_SIZE = 64;\\\\nconst AVIF_RGB_IMAGE_TIMING_STRUCT_SIZE = 40;\\\\nclass Libavif extends index_1.WorkerEventEmitter {\\\\n    constructor(awsmAvifDecode) {\\\\n        super();\\\\n        this.index = 0;\\\\n        this.imageCount = 0;\\\\n        this.timingCache = new Map();\\\\n        this.decodeStats = [];\\\\n        this.AwsmAvifDecode = awsmAvifDecode;\\\\n        this.on(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderParse, ({ id }, arrayBuffer) => {\\\\n            if (id && (arrayBuffer === null || arrayBuffer === void 0 ? void 0 : arrayBuffer.byteLength)) {\\\\n                if (!this.decoderPtr)\\\\n                    this.avifDecoderParse(arrayBuffer);\\\\n                this.decoderNthImage = this.avifDecoderNthImage;\\\\n            }\\\\n            else {\\\\n                throw new Error(`参数错误 id: ${id} arrayBuffer: ${arrayBuffer}`);\\\\n            }\\\\n        });\\\\n        this.on(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderImage, ({ id }) => {\\\\n            this.avifDecoderImage(id);\\\\n        });\\\\n        this.on(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNthImage, ({ id, frameIndex }) => {\\\\n            this.decoderNthImage(id, frameIndex);\\\\n        });\\\\n        this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.initial, this.avifVersion());\\\\n    }\\\\n    avifDecoderParse(arrayBuffer) {\\\\n        try {\\\\n            const bufferSize = arrayBuffer.byteLength;\\\\n            this.bufferPtr = this.AwsmAvifDecode._malloc(bufferSize);\\\\n            if (!this.bufferPtr) {\\\\n                throw new Error(\\\\\\\"Failed to allocate memory for buffer\\\\\\\");\\\\n            }\\\\n            this.AwsmAvifDecode.HEAPU8.set(new Uint8Array(arrayBuffer), this.bufferPtr);\\\\n            this.decoderPtr = this.AwsmAvifDecode._avifDecoderCreate();\\\\n            if (!this.decoderPtr) {\\\\n                this.free(this.bufferPtr);\\\\n                throw new Error(\\\\\\\"Failed to create decoder\\\\\\\");\\\\n            }\\\\n            let result = this.AwsmAvifDecode._avifDecoderSetIOMemory(this.decoderPtr, this.bufferPtr, bufferSize);\\\\n            if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n                this.free(this.bufferPtr);\\\\n                this.free(this.decoderPtr);\\\\n                throw new Error(`Failed to set IO memory: ${this.resultToStr(result)}`);\\\\n            }\\\\n            result = this.AwsmAvifDecode._avifDecoderParse(this.decoderPtr);\\\\n            if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n                this.free(this.bufferPtr);\\\\n                this.free(this.decoderPtr);\\\\n                throw new Error(`Failed to parse image: ${this.resultToStr(result)}`);\\\\n            }\\\\n            this.imageCount = this.AwsmAvifDecode._avifGetImageCount(this.decoderPtr);\\\\n            this.width = this.AwsmAvifDecode._avifGetImageWidth(this.decoderPtr);\\\\n            this.height = this.AwsmAvifDecode._avifGetImageHeight(this.decoderPtr);\\\\n            if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n                this.error(new Error(`Failed to decode image: ${this.resultToStr(result)}`));\\\\n                if (this.bufferPtr)\\\\n                    this.free(this.bufferPtr);\\\\n                return;\\\\n            }\\\\n            this.rbgPtr = this.AwsmAvifDecode._avifGetRGBImage();\\\\n            this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderParseComplete, {\\\\n                imageCount: this.imageCount,\\\\n                width: this.width,\\\\n                height: this.height,\\\\n            });\\\\n        }\\\\n        catch (error) {\\\\n            this.error(new Error(`${error}`));\\\\n            if (this.bufferPtr)\\\\n                this.free(this.bufferPtr);\\\\n            if (this.decoderPtr)\\\\n                this.free(this.decoderPtr);\\\\n        }\\\\n    }\\\\n    avifDecoderNthImage(id, frameIndex) {\\\\n        let result = 0;\\\\n        let t1 = performance.now();\\\\n        if ((result = this.AwsmAvifDecode._avifDecoderNthImage(this.decoderPtr, frameIndex)) === type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n            const imagePtr = this.AwsmAvifDecode._avifGetDecoderImage(this.decoderPtr);\\\\n            const timingPtr = this.AwsmAvifDecode._avifGetImageTiming(this.decoderPtr, frameIndex);\\\\n            const timing = this.getImageTiming(timingPtr);\\\\n            this.avifDecoderNthImageResult(id, imagePtr, timing, frameIndex, t1, this.rbgPtr);\\\\n            this.AwsmAvifDecode._avifRGBImageFreePixels(this.rbgPtr);\\\\n            // this.free(this.rbgPtr!);\\\\n            this.free(timingPtr);\\\\n            // this.free(imagePtr);\\\\n        }\\\\n        if (frameIndex === this.imageCount) {\\\\n            this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.decodingComplete, {});\\\\n        }\\\\n    }\\\\n    avifDecoderNthImageResult(id, imagePtr, timing, index, t1, rbgPtr) {\\\\n        this.AwsmAvifDecode._avifRGBImageSetDefaults(rbgPtr, imagePtr);\\\\n        let result = this.AwsmAvifDecode._avifRGBImageAllocatePixels(rbgPtr);\\\\n        if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n            this.error(new Error(`Allocation of RGB samples failed:  ${this.resultToStr(result)}`));\\\\n            this.free(rbgPtr);\\\\n        }\\\\n        result = this.AwsmAvifDecode._avifImageYUVToRGB(imagePtr, rbgPtr);\\\\n        if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n            this.error(new Error(`Conversion from YUV failed:  ${this.resultToStr(result)}`));\\\\n        }\\\\n        const pixelsPtr = this.AwsmAvifDecode._avifGetRGBImagePixels(rbgPtr);\\\\n        const width = this.AwsmAvifDecode._avifGetRGBImageWidth(rbgPtr);\\\\n        const height = this.AwsmAvifDecode._avifGetRGBImageHeight(rbgPtr);\\\\n        const depth = this.AwsmAvifDecode._avifGetRGBImageDepth(rbgPtr);\\\\n        const _pixels = new Uint8ClampedArray(this.AwsmAvifDecode.HEAPU8.buffer, pixelsPtr, width * height * 4);\\\\n        const pixels = _pixels.slice();\\\\n        this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNthImageResult, {\\\\n            id,\\\\n            timescale: timing.timescale,\\\\n            pts: timing.pts,\\\\n            ptsInTimescales: timing.ptsInTimescales,\\\\n            duration: timing.duration,\\\\n            durationInTimescales: timing.durationInTimescales,\\\\n            index,\\\\n            width,\\\\n            height,\\\\n            depth,\\\\n            decodeTime: performance.now() - t1,\\\\n        }, pixels.buffer);\\\\n    }\\\\n    avifDecoderImage(id) {\\\\n        try {\\\\n            let result = 0;\\\\n            let index = 0;\\\\n            let t1 = performance.now();\\\\n            while ((result = this.AwsmAvifDecode._avifDecoderNextImage(this.decoderPtr)) === type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n                this.decodeStats.push(performance.now() - t1);\\\\n                const total = this.decodeStats.reduce((a, b) => a + b, 0);\\\\n                console.log(total / this.decodeStats.length);\\\\n                const t2 = performance.now();\\\\n                const decodeTime = t2 - t1;\\\\n                t1 = t2;\\\\n                const rbgPtr = this.AwsmAvifDecode._avifGetRGBImage();\\\\n                const imagePtr = this.AwsmAvifDecode._avifGetDecoderImage(this.decoderPtr);\\\\n                this.AwsmAvifDecode._avifRGBImageSetDefaults(rbgPtr, imagePtr);\\\\n                result = this.AwsmAvifDecode._avifRGBImageAllocatePixels(rbgPtr);\\\\n                const timingPtr = this.AwsmAvifDecode._avifGetImageTiming(this.decoderPtr, index);\\\\n                const timing = this.getImageTiming(timingPtr);\\\\n                if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n                    this.error(new Error(`Allocation of RGB samples failed:  ${this.resultToStr(result)}`));\\\\n                    this.free(timingPtr);\\\\n                    this.free(rbgPtr);\\\\n                }\\\\n                result = this.AwsmAvifDecode._avifImageYUVToRGB(imagePtr, rbgPtr);\\\\n                if (result !== type_1.AVIF_RESULT.AVIF_RESULT_OK) {\\\\n                    this.error(new Error(`Conversion from YUV failed:  ${this.resultToStr(result)}`));\\\\n                }\\\\n                const pixelsPtr = this.AwsmAvifDecode._avifGetRGBImagePixels(rbgPtr);\\\\n                const width = this.AwsmAvifDecode._avifGetRGBImageWidth(rbgPtr);\\\\n                const height = this.AwsmAvifDecode._avifGetRGBImageHeight(rbgPtr);\\\\n                const depth = this.AwsmAvifDecode._avifGetRGBImageDepth(rbgPtr);\\\\n                const _pixels = new Uint8ClampedArray(this.AwsmAvifDecode.HEAPU8.buffer, pixelsPtr, width * height * 4);\\\\n                const pixels = _pixels.slice();\\\\n                this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderNextImage, {\\\\n                    id,\\\\n                    timescale: timing.timescale,\\\\n                    pts: timing.pts,\\\\n                    ptsInTimescales: timing.ptsInTimescales,\\\\n                    duration: timing.duration,\\\\n                    durationInTimescales: timing.durationInTimescales,\\\\n                    index,\\\\n                    width,\\\\n                    height,\\\\n                    depth,\\\\n                    decodeTime,\\\\n                }, pixels.buffer);\\\\n                index++;\\\\n                this.AwsmAvifDecode._avifRGBImageFreePixels(rbgPtr);\\\\n                this.free(timingPtr);\\\\n            }\\\\n            if (result === type_1.AVIF_RESULT.AVIF_RESULT_NO_IMAGES_REMAINING) {\\\\n                this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.decodingComplete, {});\\\\n            }\\\\n        }\\\\n        catch (error) {\\\\n            console.log(error);\\\\n            // 处理错误\\\\n            this.error(new Error(`${error}`));\\\\n        }\\\\n        finally {\\\\n            if (this.bufferPtr)\\\\n                this.free(this.bufferPtr);\\\\n            if (this.decoderPtr)\\\\n                this.AwsmAvifDecode._avifDecoderDestroy(this.decoderPtr);\\\\n        }\\\\n    }\\\\n    getImageTiming(timingPtr) {\\\\n        // 直接访问Timing结构体的值\\\\n        const timescale = this.AwsmAvifDecode.getValue(timingPtr + 0, \\\\\\\"double\\\\\\\"); // Timing结构体中duration的偏移量为0\\\\n        const pts = this.AwsmAvifDecode.getValue(timingPtr + 8, \\\\\\\"double\\\\\\\");\\\\n        const ptsInTimescales = this.AwsmAvifDecode.getValue(timingPtr + 16, \\\\\\\"i32\\\\\\\");\\\\n        const duration = this.AwsmAvifDecode.getValue(timingPtr + 24, \\\\\\\"double\\\\\\\");\\\\n        const durationInTimescales = this.AwsmAvifDecode.getValue(timingPtr + 32, \\\\\\\"i32\\\\\\\");\\\\n        return {\\\\n            timescale,\\\\n            pts,\\\\n            ptsInTimescales,\\\\n            duration,\\\\n            durationInTimescales,\\\\n        };\\\\n    }\\\\n    avifVersion() {\\\\n        return this.AwsmAvifDecode.UTF8ToString(this.AwsmAvifDecode._avifVersion());\\\\n    }\\\\n    resultToStr(result) {\\\\n        return this.UTF8ToString(this.AwsmAvifDecode._avifResultToString(result));\\\\n    }\\\\n    error(error) {\\\\n        this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.error, error);\\\\n    }\\\\n    free(ptr) {\\\\n        this.AwsmAvifDecode._free(ptr);\\\\n    }\\\\n    UTF8ToString(ptr) {\\\\n        return this.AwsmAvifDecode.UTF8ToString(ptr);\\\\n    }\\\\n    avifSetDecoderMaxThreads(threads = 4) {\\\\n        this.AwsmAvifDecode.ccall(\\\\\\\"avifSetDecoderMaxThreads\\\\\\\", \\\\\\\"void\\\\\\\", [\\\\\\\"number\\\\\\\", \\\\\\\"number\\\\\\\"], [this.decoderPtr, threads]);\\\\n    }\\\\n    print(data) {\\\\n        this.send(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderConsole, data);\\\\n    }\\\\n}\\\\nexports[\\\\\\\"default\\\\\\\"] = Libavif;\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./src/Worker/Libavif.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ts-loader/index.js!./src/Worker/main.worker.ts\\\":\\n/*!*********************************************************************!*\\\\\\n  !*** ./node_modules/ts-loader/index.js!./src/Worker/main.worker.ts ***!\\n  \\\\*********************************************************************/\\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\\n\\neval(\\\"\\\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\\\n    return new (P || (P = Promise))(function (resolve, reject) {\\\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\\\n        function rejected(value) { try { step(generator[\\\\\\\"throw\\\\\\\"](value)); } catch (e) { reject(e); } }\\\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\\\n    });\\\\n};\\\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\\\n    return (mod && mod.__esModule) ? mod : { \\\\\\\"default\\\\\\\": mod };\\\\n};\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", ({ value: true }));\\\\nconst avifDecodeFileWeb_min_js_1 = __importDefault(__webpack_require__(/*! ../Libavif/avifDecodeFileWeb.min.js */ \\\\\\\"./src/Libavif/avifDecodeFileWeb.min.js\\\\\\\"));\\\\nconst WorkerMessageType_1 = __webpack_require__(/*! ../types/WorkerMessageType */ \\\\\\\"./src/types/WorkerMessageType.ts\\\\\\\");\\\\nconst Libavif_1 = __importDefault(__webpack_require__(/*! ./Libavif */ \\\\\\\"./src/Worker/Libavif.ts\\\\\\\"));\\\\nself.onmessage = (e) => {\\\\n    const res = e.data[0] + e.data[1];\\\\n    self.postMessage(res);\\\\n};\\\\nclass InitialAvifDecodeFileWeb {\\\\n    constructor() {\\\\n        this.initialAvifDecodeFileWeb();\\\\n    }\\\\n    initialAvifDecodeFileWeb() {\\\\n        return __awaiter(this, void 0, void 0, function* () {\\\\n            try {\\\\n                const AvifDecodeFileWeb = yield (0, avifDecodeFileWeb_min_js_1.default)();\\\\n                this.libavif = new Libavif_1.default(AvifDecodeFileWeb);\\\\n                this.libavif.on(WorkerMessageType_1.WorkerAvifDecoderMessageChannel.avifDecoderDestroy, () => {\\\\n                    self.close();\\\\n                });\\\\n            }\\\\n            catch (error) {\\\\n                console.log(error);\\\\n                throw error;\\\\n            }\\\\n        });\\\\n    }\\\\n}\\\\nexports[\\\\\\\"default\\\\\\\"] = InitialAvifDecodeFileWeb;\\\\nnew InitialAvifDecodeFileWeb();\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHMtbG9hZGVyL2luZGV4LmpzIS4vc3JjL1dvcmtlci9tYWluLndvcmtlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLDZKQUFvRTtBQUNwRSxzSEFBNkU7QUFDN0UsbUdBQWdDO0FBRWhDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRTtJQUNyQixNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN4QixDQUFDLENBQUM7QUFFRixNQUFxQix3QkFBd0I7SUFFM0M7UUFDRSxJQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUssd0JBQXdCOztZQUM1QixJQUFJLENBQUM7Z0JBQ0gsTUFBTSxpQkFBaUIsR0FBRyxNQUFNLHNDQUFpQixHQUFFLENBQUM7Z0JBQ3BELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxpQkFBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7Z0JBQzlDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUNiLG1EQUErQixDQUFDLGtCQUFrQixFQUNsRCxHQUFHLEVBQUU7b0JBQ0gsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUNmLENBQUMsQ0FDRixDQUFDO1lBQ0osQ0FBQztZQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbkIsTUFBTSxLQUFLLENBQUM7WUFDZCxDQUFDO1FBQ0gsQ0FBQztLQUFBO0NBQ0Y7QUFyQkQsOENBcUJDO0FBRUQsSUFBSSx3QkFBd0IsRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZpZlBsYXllcldlYi8uL3NyYy9Xb3JrZXIvbWFpbi53b3JrZXIudHM/MmIyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXZpZkRlY29kZUZpbGVXZWIgZnJvbSBcIi4uL0xpYmF2aWYvYXZpZkRlY29kZUZpbGVXZWIubWluLmpzXCI7XHJcbmltcG9ydCB7IFdvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwgfSBmcm9tIFwiLi4vdHlwZXMvV29ya2VyTWVzc2FnZVR5cGVcIjtcclxuaW1wb3J0IExpYmF2aWYgZnJvbSBcIi4vTGliYXZpZlwiO1xyXG5cclxuc2VsZi5vbm1lc3NhZ2UgPSAoZSkgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGUuZGF0YVswXSArIGUuZGF0YVsxXTtcclxuICBzZWxmLnBvc3RNZXNzYWdlKHJlcyk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbml0aWFsQXZpZkRlY29kZUZpbGVXZWIge1xyXG4gIGxpYmF2aWY/OiBMaWJhdmlmO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5pbml0aWFsQXZpZkRlY29kZUZpbGVXZWIoKTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGluaXRpYWxBdmlmRGVjb2RlRmlsZVdlYigpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IEF2aWZEZWNvZGVGaWxlV2ViID0gYXdhaXQgYXZpZkRlY29kZUZpbGVXZWIoKTtcclxuICAgICAgdGhpcy5saWJhdmlmID0gbmV3IExpYmF2aWYoQXZpZkRlY29kZUZpbGVXZWIpO1xyXG4gICAgICB0aGlzLmxpYmF2aWYub24oXHJcbiAgICAgICAgV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2RlckRlc3Ryb3ksXHJcbiAgICAgICAgKCkgPT4ge1xyXG4gICAgICAgICAgc2VsZi5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5uZXcgSW5pdGlhbEF2aWZEZWNvZGVGaWxlV2ViKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ts-loader/index.js!./src/Worker/main.worker.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/Worker/type.ts\\\":\\n/*!****************************!*\\\\\\n  !*** ./src/Worker/type.ts ***!\\n  \\\\****************************/\\n/***/ ((__unused_webpack_module, exports) => {\\n\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", ({ value: true }));\\\\nexports.AVIF_RESULT = void 0;\\\\nvar AVIF_RESULT;\\\\n(function (AVIF_RESULT) {\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_OK\\\\\\\"] = 0] = \\\\\\\"AVIF_RESULT_OK\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_UNKNOWN_ERROR\\\\\\\"] = 1] = \\\\\\\"AVIF_RESULT_UNKNOWN_ERROR\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_INVALID_FTYP\\\\\\\"] = 2] = \\\\\\\"AVIF_RESULT_INVALID_FTYP\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_NO_CONTENT\\\\\\\"] = 3] = \\\\\\\"AVIF_RESULT_NO_CONTENT\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_NO_YUV_FORMAT_SELECTED\\\\\\\"] = 4] = \\\\\\\"AVIF_RESULT_NO_YUV_FORMAT_SELECTED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_REFORMAT_FAILED\\\\\\\"] = 5] = \\\\\\\"AVIF_RESULT_REFORMAT_FAILED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_UNSUPPORTED_DEPTH\\\\\\\"] = 6] = \\\\\\\"AVIF_RESULT_UNSUPPORTED_DEPTH\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_ENCODE_COLOR_FAILED\\\\\\\"] = 7] = \\\\\\\"AVIF_RESULT_ENCODE_COLOR_FAILED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_ENCODE_ALPHA_FAILED\\\\\\\"] = 8] = \\\\\\\"AVIF_RESULT_ENCODE_ALPHA_FAILED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_BMFF_PARSE_FAILED\\\\\\\"] = 9] = \\\\\\\"AVIF_RESULT_BMFF_PARSE_FAILED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_MISSING_IMAGE_ITEM\\\\\\\"] = 10] = \\\\\\\"AVIF_RESULT_MISSING_IMAGE_ITEM\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_DECODE_COLOR_FAILED\\\\\\\"] = 11] = \\\\\\\"AVIF_RESULT_DECODE_COLOR_FAILED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_DECODE_ALPHA_FAILED\\\\\\\"] = 12] = \\\\\\\"AVIF_RESULT_DECODE_ALPHA_FAILED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_COLOR_ALPHA_SIZE_MISMATCH\\\\\\\"] = 13] = \\\\\\\"AVIF_RESULT_COLOR_ALPHA_SIZE_MISMATCH\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_ISPE_SIZE_MISMATCH\\\\\\\"] = 14] = \\\\\\\"AVIF_RESULT_ISPE_SIZE_MISMATCH\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_NO_CODEC_AVAILABLE\\\\\\\"] = 15] = \\\\\\\"AVIF_RESULT_NO_CODEC_AVAILABLE\\\\\\\";\\\\n    /**\\\\n     * 没有剩余的图像数据可用\\\\n     */\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_NO_IMAGES_REMAINING\\\\\\\"] = 16] = \\\\\\\"AVIF_RESULT_NO_IMAGES_REMAINING\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_INVALID_EXIF_PAYLOAD\\\\\\\"] = 17] = \\\\\\\"AVIF_RESULT_INVALID_EXIF_PAYLOAD\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_INVALID_IMAGE_GRID\\\\\\\"] = 18] = \\\\\\\"AVIF_RESULT_INVALID_IMAGE_GRID\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_INVALID_CODEC_SPECIFIC_OPTION\\\\\\\"] = 19] = \\\\\\\"AVIF_RESULT_INVALID_CODEC_SPECIFIC_OPTION\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_TRUNCATED_DATA\\\\\\\"] = 20] = \\\\\\\"AVIF_RESULT_TRUNCATED_DATA\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_IO_NOT_SET\\\\\\\"] = 21] = \\\\\\\"AVIF_RESULT_IO_NOT_SET\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_IO_ERROR\\\\\\\"] = 22] = \\\\\\\"AVIF_RESULT_IO_ERROR\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_WAITING_ON_IO\\\\\\\"] = 23] = \\\\\\\"AVIF_RESULT_WAITING_ON_IO\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_INVALID_ARGUMENT\\\\\\\"] = 24] = \\\\\\\"AVIF_RESULT_INVALID_ARGUMENT\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_NOT_IMPLEMENTED\\\\\\\"] = 25] = \\\\\\\"AVIF_RESULT_NOT_IMPLEMENTED\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_OUT_OF_MEMORY\\\\\\\"] = 26] = \\\\\\\"AVIF_RESULT_OUT_OF_MEMORY\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_CANNOT_CHANGE_SETTING\\\\\\\"] = 27] = \\\\\\\"AVIF_RESULT_CANNOT_CHANGE_SETTING\\\\\\\";\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_INCOMPATIBLE_IMAGE\\\\\\\"] = 28] = \\\\\\\"AVIF_RESULT_INCOMPATIBLE_IMAGE\\\\\\\";\\\\n    // Kept for backward compatibility; please use the symbols above instead.\\\\n    AVIF_RESULT[AVIF_RESULT[\\\\\\\"AVIF_RESULT_NO_AV1_ITEMS_FOUND\\\\\\\"] = 10] = \\\\\\\"AVIF_RESULT_NO_AV1_ITEMS_FOUND\\\\\\\";\\\\n})(AVIF_RESULT || (exports.AVIF_RESULT = AVIF_RESULT = {}));\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV29ya2VyL3R5cGUudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBWSxXQW1DWDtBQW5DRCxXQUFZLFdBQVc7SUFDckIsaUVBQWtCO0lBQ2xCLHVGQUE2QjtJQUM3QixxRkFBNEI7SUFDNUIsaUZBQTBCO0lBQzFCLHlHQUFzQztJQUN0QywyRkFBK0I7SUFDL0IsK0ZBQWlDO0lBQ2pDLG1HQUFtQztJQUNuQyxtR0FBbUM7SUFDbkMsK0ZBQWlDO0lBQ2pDLGtHQUFtQztJQUNuQyxvR0FBb0M7SUFDcEMsb0dBQW9DO0lBQ3BDLGdIQUEwQztJQUMxQyxrR0FBbUM7SUFDbkMsa0dBQW1DO0lBQ25DOztPQUVHO0lBQ0gsb0dBQW9DO0lBQ3BDLHNHQUFxQztJQUNyQyxrR0FBbUM7SUFDbkMsd0hBQThDO0lBQzlDLDBGQUErQjtJQUMvQixrRkFBMkI7SUFDM0IsOEVBQXlCO0lBQ3pCLHdGQUE4QjtJQUM5Qiw4RkFBaUM7SUFDakMsNEZBQWdDO0lBQ2hDLHdGQUE4QjtJQUM5Qix3R0FBc0M7SUFDdEMsa0dBQW1DO0lBQ25DLHlFQUF5RTtJQUN6RSxrR0FBK0Q7QUFDakUsQ0FBQyxFQW5DVyxXQUFXLDJCQUFYLFdBQVcsUUFtQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZpZlBsYXllcldlYi8uL3NyYy9Xb3JrZXIvdHlwZS50cz8zYjQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIEFWSUZfUkVTVUxUIHtcclxuICBBVklGX1JFU1VMVF9PSyA9IDAsXHJcbiAgQVZJRl9SRVNVTFRfVU5LTk9XTl9FUlJPUiA9IDEsXHJcbiAgQVZJRl9SRVNVTFRfSU5WQUxJRF9GVFlQID0gMixcclxuICBBVklGX1JFU1VMVF9OT19DT05URU5UID0gMyxcclxuICBBVklGX1JFU1VMVF9OT19ZVVZfRk9STUFUX1NFTEVDVEVEID0gNCxcclxuICBBVklGX1JFU1VMVF9SRUZPUk1BVF9GQUlMRUQgPSA1LFxyXG4gIEFWSUZfUkVTVUxUX1VOU1VQUE9SVEVEX0RFUFRIID0gNixcclxuICBBVklGX1JFU1VMVF9FTkNPREVfQ09MT1JfRkFJTEVEID0gNyxcclxuICBBVklGX1JFU1VMVF9FTkNPREVfQUxQSEFfRkFJTEVEID0gOCxcclxuICBBVklGX1JFU1VMVF9CTUZGX1BBUlNFX0ZBSUxFRCA9IDksXHJcbiAgQVZJRl9SRVNVTFRfTUlTU0lOR19JTUFHRV9JVEVNID0gMTAsXHJcbiAgQVZJRl9SRVNVTFRfREVDT0RFX0NPTE9SX0ZBSUxFRCA9IDExLFxyXG4gIEFWSUZfUkVTVUxUX0RFQ09ERV9BTFBIQV9GQUlMRUQgPSAxMixcclxuICBBVklGX1JFU1VMVF9DT0xPUl9BTFBIQV9TSVpFX01JU01BVENIID0gMTMsXHJcbiAgQVZJRl9SRVNVTFRfSVNQRV9TSVpFX01JU01BVENIID0gMTQsXHJcbiAgQVZJRl9SRVNVTFRfTk9fQ09ERUNfQVZBSUxBQkxFID0gMTUsXHJcbiAgLyoqXHJcbiAgICog5rKh5pyJ5Ymp5L2Z55qE5Zu+5YOP5pWw5o2u5Y+v55SoXHJcbiAgICovXHJcbiAgQVZJRl9SRVNVTFRfTk9fSU1BR0VTX1JFTUFJTklORyA9IDE2LFxyXG4gIEFWSUZfUkVTVUxUX0lOVkFMSURfRVhJRl9QQVlMT0FEID0gMTcsXHJcbiAgQVZJRl9SRVNVTFRfSU5WQUxJRF9JTUFHRV9HUklEID0gMTgsXHJcbiAgQVZJRl9SRVNVTFRfSU5WQUxJRF9DT0RFQ19TUEVDSUZJQ19PUFRJT04gPSAxOSxcclxuICBBVklGX1JFU1VMVF9UUlVOQ0FURURfREFUQSA9IDIwLFxyXG4gIEFWSUZfUkVTVUxUX0lPX05PVF9TRVQgPSAyMSwgLy8gdGhlIGF2aWZJTyBmaWVsZCBvZiBhdmlmRGVjb2RlciBpcyBub3Qgc2V0XHJcbiAgQVZJRl9SRVNVTFRfSU9fRVJST1IgPSAyMixcclxuICBBVklGX1JFU1VMVF9XQUlUSU5HX09OX0lPID0gMjMsIC8vIHNpbWlsYXIgdG8gRUFHQUlOL0VXT1VMREJMT0NLLCB0aGlzIG1lYW5zIHRoZSBhdmlmSU8gZG9lc24ndCBoYXZlIG5lY2Vzc2FyeSBkYXRhIGF2YWlsYWJsZSB5ZXRcclxuICBBVklGX1JFU1VMVF9JTlZBTElEX0FSR1VNRU5UID0gMjQsIC8vIGFuIGFyZ3VtZW50IHBhc3NlZCBpbnRvIHRoaXMgZnVuY3Rpb24gaXMgaW52YWxpZFxyXG4gIEFWSUZfUkVTVUxUX05PVF9JTVBMRU1FTlRFRCA9IDI1LCAvLyBhIHJlcXVlc3RlZCBjb2RlIHBhdGggaXMgbm90ICh5ZXQpIGltcGxlbWVudGVkXHJcbiAgQVZJRl9SRVNVTFRfT1VUX09GX01FTU9SWSA9IDI2LFxyXG4gIEFWSUZfUkVTVUxUX0NBTk5PVF9DSEFOR0VfU0VUVElORyA9IDI3LCAvLyBhIHNldHRpbmcgdGhhdCBjYW4ndCBjaGFuZ2UgaXMgY2hhbmdlZCBkdXJpbmcgZW5jb2RpbmdcclxuICBBVklGX1JFU1VMVF9JTkNPTVBBVElCTEVfSU1BR0UgPSAyOCwgLy8gdGhlIGltYWdlIGlzIGluY29tcGF0aWJsZSB3aXRoIGFscmVhZHkgZW5jb2RlZCBpbWFnZXNcclxuICAvLyBLZXB0IGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5OyBwbGVhc2UgdXNlIHRoZSBzeW1ib2xzIGFib3ZlIGluc3RlYWQuXHJcbiAgQVZJRl9SRVNVTFRfTk9fQVYxX0lURU1TX0ZPVU5EID0gQVZJRl9SRVNVTFRfTUlTU0lOR19JTUFHRV9JVEVNLFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEF2aWZJbWFnZUNhY2hlIHtcclxuICAvLyDmlrnms5Xlo7DmmI5cclxuICBjYWNoZUltYWdlKGlkOiBzdHJpbmcsIGltYWdlOiBudW1iZXIsIGluZGV4OiBudW1iZXIpOiB2b2lkO1xyXG4gIGluaXRpYWxpemVDYWNoZUVudHJ5KGlkOiBzdHJpbmcsIGNvdW50OiBudW1iZXIpOiB2b2lkO1xyXG4gIGdldEltYWdlcyhpZDogc3RyaW5nLCBjb3VudDogbnVtYmVyKTogbnVtYmVyIHwgbnVsbDtcclxuICBnZXRJbWFnZShpZDogc3RyaW5nLCBpbmRleDogbnVtYmVyKTogbnVtYmVyIHwgbnVsbDtcclxuICBjbGVhckNhY2hlRm9ySWQoaWQ6IHN0cmluZyk6IHZvaWQ7XHJcbiAgY2xlYXJDYWNoZSgpOiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEF2aWZJbWFnZVRpbWluZyB7XHJcbiAgLyoqXHJcbiAgICog5aqS5L2T55qE5pe26Ze05Yi75bqm77yISHrvvIlcclxuICAgKi9cclxuICB0aW1lc2NhbGU6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDooajnpLrml7bpl7TmiLPvvIzljZXkvY3kuLrnp5JcclxuICAgKi9cclxuICBwdHM6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDooajnpLrml7bpl7TmiLPvvIzljZXkvY3kuLrigJx0aW1lc2NhbGVz4oCdXHJcbiAgICovXHJcbiAgcHRzSW5UaW1lc2NhbGVzOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5oyB57ut5pe26Ze077yM5Y2V5L2N5Li656eSXHJcbiAgICovXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICAvKipcclxuICAgKiDmjIHnu63ml7bpl7TvvIzljZXkvY3kuLrigJx0aW1lc2NhbGVz4oCdXHJcbiAgICovXHJcbiAgZHVyYXRpb25JblRpbWVzY2FsZXM6IG51bWJlcjtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./src/Worker/type.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/types/WorkerMessageType.ts\\\":\\n/*!****************************************!*\\\\\\n  !*** ./src/types/WorkerMessageType.ts ***!\\n  \\\\****************************************/\\n/***/ ((__unused_webpack_module, exports) => {\\n\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", ({ value: true }));\\\\nexports.DecoderChannel = exports.WorkerAvifDecoderMessageChannel = void 0;\\\\nvar WorkerAvifDecoderMessageChannel;\\\\n(function (WorkerAvifDecoderMessageChannel) {\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"error\\\\\\\"] = 0] = \\\\\\\"error\\\\\\\";\\\\n    /**\\\\n     * worker解码器初始化完成\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"initial\\\\\\\"] = 1] = \\\\\\\"initial\\\\\\\";\\\\n    /**\\\\n     * 提交Uint8Array数据到worker线程解码\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderParse\\\\\\\"] = 2] = \\\\\\\"avifDecoderParse\\\\\\\";\\\\n    /**\\\\n     * 每帧解码数据完成\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderNextImage\\\\\\\"] = 3] = \\\\\\\"avifDecoderNextImage\\\\\\\";\\\\n    /**\\\\n     * 所有图像数据解码完成\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"decodingComplete\\\\\\\"] = 4] = \\\\\\\"decodingComplete\\\\\\\";\\\\n    /**\\\\n     * Avif文件解析完成\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderParseComplete\\\\\\\"] = 5] = \\\\\\\"avifDecoderParseComplete\\\\\\\";\\\\n    /**\\\\n     * 解码所有帧数据\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderImage\\\\\\\"] = 6] = \\\\\\\"avifDecoderImage\\\\\\\";\\\\n    /**\\\\n     * 解码指定帧数据\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderNthImage\\\\\\\"] = 7] = \\\\\\\"avifDecoderNthImage\\\\\\\";\\\\n    /**\\\\n     * 解码指定帧数据解码完成\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderNthImageResult\\\\\\\"] = 8] = \\\\\\\"avifDecoderNthImageResult\\\\\\\";\\\\n    /**\\\\n     * 销毁解码器\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderDestroy\\\\\\\"] = 9] = \\\\\\\"avifDecoderDestroy\\\\\\\";\\\\n    /**\\\\n     * 输出\\\\n     */\\\\n    WorkerAvifDecoderMessageChannel[WorkerAvifDecoderMessageChannel[\\\\\\\"avifDecoderConsole\\\\\\\"] = 10] = \\\\\\\"avifDecoderConsole\\\\\\\";\\\\n})(WorkerAvifDecoderMessageChannel || (exports.WorkerAvifDecoderMessageChannel = WorkerAvifDecoderMessageChannel = {}));\\\\nvar DecoderChannel;\\\\n(function (DecoderChannel) {\\\\n    /**\\\\n     * 和Workers线程建立通信\\\\n     */\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"WorkerCommunication\\\\\\\"] = -1] = \\\\\\\"WorkerCommunication\\\\\\\";\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"error\\\\\\\"] = 0] = \\\\\\\"error\\\\\\\";\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"nextImage\\\\\\\"] = 1] = \\\\\\\"nextImage\\\\\\\";\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"avifParse\\\\\\\"] = 2] = \\\\\\\"avifParse\\\\\\\";\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"firstFrameDecode\\\\\\\"] = 3] = \\\\\\\"firstFrameDecode\\\\\\\";\\\\n    /**\\\\n     * 所有图像数据解码完成\\\\n     */\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"decodeComplete\\\\\\\"] = 4] = \\\\\\\"decodeComplete\\\\\\\";\\\\n    /**\\\\n     * 销毁解码器\\\\n     */\\\\n    DecoderChannel[DecoderChannel[\\\\\\\"destroy\\\\\\\"] = 5] = \\\\\\\"destroy\\\\\\\";\\\\n})(DecoderChannel || (exports.DecoderChannel = DecoderChannel = {}));\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMvV29ya2VyTWVzc2FnZVR5cGUudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBWSwrQkEwQ1g7QUExQ0QsV0FBWSwrQkFBK0I7SUFDekMsdUZBQVM7SUFDVDs7T0FFRztJQUNILDJGQUFXO0lBQ1g7O09BRUc7SUFDSCw2R0FBb0I7SUFDcEI7O09BRUc7SUFDSCxxSEFBd0I7SUFDeEI7O09BRUc7SUFDSCw2R0FBb0I7SUFDcEI7O09BRUc7SUFDSCw2SEFBNEI7SUFDNUI7O09BRUc7SUFDSCw2R0FBb0I7SUFDcEI7O09BRUc7SUFDSCxtSEFBdUI7SUFDdkI7O09BRUc7SUFDSCwrSEFBNkI7SUFDN0I7O09BRUc7SUFDSCxpSEFBc0I7SUFDdEI7O09BRUc7SUFDSCxrSEFBdUI7QUFDekIsQ0FBQyxFQTFDVywrQkFBK0IsK0NBQS9CLCtCQUErQixRQTBDMUM7QUFDRCxJQUFZLGNBaUJYO0FBakJELFdBQVksY0FBYztJQUN4Qjs7T0FFRztJQUNILGtGQUF3QjtJQUN4QixxREFBUztJQUNULDZEQUFhO0lBQ2IsNkRBQWE7SUFDYiwyRUFBb0I7SUFDcEI7O09BRUc7SUFDSCx1RUFBa0I7SUFDbEI7O09BRUc7SUFDSCx5REFBVztBQUNiLENBQUMsRUFqQlcsY0FBYyw4QkFBZCxjQUFjLFFBaUJ6QiIsInNvdXJjZXMiOlsid2VicGFjazovL0F2aWZQbGF5ZXJXZWIvLi9zcmMvdHlwZXMvV29ya2VyTWVzc2FnZVR5cGUudHM/NWU4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsIHtcclxuICBlcnJvciA9IDAsXHJcbiAgLyoqXHJcbiAgICogd29ya2Vy6Kej56CB5Zmo5Yid5aeL5YyW5a6M5oiQXHJcbiAgICovXHJcbiAgaW5pdGlhbCA9IDEsXHJcbiAgLyoqXHJcbiAgICog5o+Q5LqkVWludDhBcnJheeaVsOaNruWIsHdvcmtlcue6v+eoi+ino+eggVxyXG4gICAqL1xyXG4gIGF2aWZEZWNvZGVyUGFyc2UgPSAyLFxyXG4gIC8qKlxyXG4gICAqIOavj+W4p+ino+eggeaVsOaNruWujOaIkFxyXG4gICAqL1xyXG4gIGF2aWZEZWNvZGVyTmV4dEltYWdlID0gMyxcclxuICAvKipcclxuICAgKiDmiYDmnInlm77lg4/mlbDmja7op6PnoIHlrozmiJBcclxuICAgKi9cclxuICBkZWNvZGluZ0NvbXBsZXRlID0gNCxcclxuICAvKipcclxuICAgKiBBdmlm5paH5Lu26Kej5p6Q5a6M5oiQXHJcbiAgICovXHJcbiAgYXZpZkRlY29kZXJQYXJzZUNvbXBsZXRlID0gNSxcclxuICAvKipcclxuICAgKiDop6PnoIHmiYDmnInluKfmlbDmja5cclxuICAgKi9cclxuICBhdmlmRGVjb2RlckltYWdlID0gNixcclxuICAvKipcclxuICAgKiDop6PnoIHmjIflrprluKfmlbDmja5cclxuICAgKi9cclxuICBhdmlmRGVjb2Rlck50aEltYWdlID0gNyxcclxuICAvKipcclxuICAgKiDop6PnoIHmjIflrprluKfmlbDmja7op6PnoIHlrozmiJBcclxuICAgKi9cclxuICBhdmlmRGVjb2Rlck50aEltYWdlUmVzdWx0ID0gOCxcclxuICAvKipcclxuICAgKiDplIDmr4Hop6PnoIHlmahcclxuICAgKi9cclxuICBhdmlmRGVjb2RlckRlc3Ryb3kgPSA5LFxyXG4gIC8qKlxyXG4gICAqIOi+k+WHulxyXG4gICAqL1xyXG4gIGF2aWZEZWNvZGVyQ29uc29sZSA9IDEwLFxyXG59XHJcbmV4cG9ydCBlbnVtIERlY29kZXJDaGFubmVsIHtcclxuICAvKipcclxuICAgKiDlkoxXb3JrZXJz57q/56iL5bu656uL6YCa5L+hXHJcbiAgICovXHJcbiAgV29ya2VyQ29tbXVuaWNhdGlvbiA9IC0xLFxyXG4gIGVycm9yID0gMCxcclxuICBuZXh0SW1hZ2UgPSAxLFxyXG4gIGF2aWZQYXJzZSA9IDIsXHJcbiAgZmlyc3RGcmFtZURlY29kZSA9IDMsXHJcbiAgLyoqXHJcbiAgICog5omA5pyJ5Zu+5YOP5pWw5o2u6Kej56CB5a6M5oiQXHJcbiAgICovXHJcbiAgZGVjb2RlQ29tcGxldGUgPSA0LFxyXG4gIC8qKlxyXG4gICAqIOmUgOavgeino+eggeWZqFxyXG4gICAqL1xyXG4gIGRlc3Ryb3kgPSA1LFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERlY29kZXJFdmVudE1hcCB7XHJcbiAgW0RlY29kZXJDaGFubmVsLmVycm9yXTogRXJyb3IgfCBFcnJvckV2ZW50O1xyXG4gIFtEZWNvZGVyQ2hhbm5lbC5uZXh0SW1hZ2VdOiBEZWNvZGVyQXZpZkltYWdlRGF0YTtcclxuICBbRGVjb2RlckNoYW5uZWwuYXZpZlBhcnNlXTogQXZpZlBhcnNlRGF0YTtcclxuICBbRGVjb2RlckNoYW5uZWwuZGVjb2RlQ29tcGxldGVdOiB7fTtcclxuICBbRGVjb2RlckNoYW5uZWwuZGVzdHJveV06IHt9O1xyXG4gIFtEZWNvZGVyQ2hhbm5lbC5Xb3JrZXJDb21tdW5pY2F0aW9uXToge307XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZlBhcnNlRGF0YSB7XHJcbiAgLyoqXHJcbiAgICog5Zu+5YOP5a695bqmXHJcbiAgICovXHJcbiAgd2lkdGg6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDlm77lg4/pq5jluqZcclxuICAgKi9cclxuICBoZWlnaHQ6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDluKfmlbBcclxuICAgKi9cclxuICBpbWFnZUNvdW50OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZkRlY29kZXJQYXJzZUNvbXBsZXRlIGV4dGVuZHMgQXZpZlBhcnNlRGF0YSB7fVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBdmlmRGVjb2Rlck5leHRJbWFnZURhdGEge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgICog5bin57Si5byVXHJcbiAgICovXHJcbiAgaW5kZXg6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDlm77lg4/lrr3luqZcclxuICAgKi9cclxuICB3aWR0aDogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIOWbvuWDj+mrmOW6plxyXG4gICAqL1xyXG4gIGhlaWdodDogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIOWDj+e0oOS9jea3seW6pls4LCAxMCwgMTIsIDE2XeOAguWmguaenOa3seW6puWkp+S6jjjvvIzliJnlg4/ntKDlnKjlhoXpg6jlv4XpobvmmK91aW50MTZfdOexu+Wei+OAglxyXG4gICAqL1xyXG4gIGRlcHRoOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5aqS5L2T55qE5pe26Ze05Yi75bqm77yI6LWr5YW577yJXHJcbiAgICovXHJcbiAgdGltZXNjYWxlOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5Lul56eS5Li65Y2V5L2N55qE5bGV56S65pe26Ze05oiz77yIcHRzSW5UaW1lc2NhbGVzIC8gdGltZXNjYWxl77yJXHJcbiAgICovXHJcbiAgcHRzOiBudW1iZXI7XHJcbiAgLyoqXHJcbiAgICog5bGV56S65pe26Ze05oiz77yI5LulXCJ0aW1lY2FsZXNcIuS4uuWNleS9je+8iVxyXG4gICAqL1xyXG4gIHB0c0luVGltZXNjYWxlczogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIOS7peenkuS4uuWNleS9jeeahOaMgee7reaXtumXtO+8iGR1cmF0aW9uSW5UaW1lc2NhbGVzIC8gdGltZXNjYWxl77yJXHJcbiAgICovXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICAvKipcclxuICAgKiDmjIHnu63ml7bpl7TvvIjku6VcInRpbWVjYWxlc1wi5Li65Y2V5L2N77yJXHJcbiAgICovXHJcbiAgZHVyYXRpb25JblRpbWVzY2FsZXM6IG51bWJlcjtcclxuICAvKipcclxuICAgKiDop6PnoIHml7bpl7RcclxuICAgKi9cclxuICBkZWNvZGVUaW1lOiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmr4/luKflm77lg4/mlbDmja5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGVjb2RlckltYWdlRGF0YSBleHRlbmRzIEF2aWZEZWNvZGVyTmV4dEltYWdlRGF0YSB7XHJcbiAgLyoqXHJcbiAgICog5YOP57Sg6ZuG5ZCIXHJcbiAgICovXHJcbiAgcGl4ZWxzOiBBcnJheUJ1ZmZlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEZWNvZGVyQXZpZkltYWdlRGF0YSBleHRlbmRzIERlY29kZXJJbWFnZURhdGEge31cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZkRlY29kZXJQYXJzZURhdGEge1xyXG4gIC8qKlxyXG4gICAqIOWUr+S4gOi1hOa6kOagh+ivhlxyXG4gICAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXZpZkRlY29kZXJOdGhJbWFnZURhdGEge1xyXG4gIC8qKlxyXG4gICAqIOWUr+S4gOi1hOa6kOagh+ivhlxyXG4gICAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgICog5bin57Si5byVXHJcbiAgICovXHJcbiAgZnJhbWVJbmRleDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFdvcmtlckF2aWZEZWNvZGVyRXZlbnRNYXAge1xyXG4gIFtXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsLmF2aWZEZWNvZGVyUGFyc2VdOiBBdmlmRGVjb2RlclBhcnNlRGF0YTtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2Rlck5leHRJbWFnZV06IEF2aWZEZWNvZGVyTmV4dEltYWdlRGF0YTtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5pbml0aWFsXTogc3RyaW5nO1xyXG4gIFtXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsLmRlY29kaW5nQ29tcGxldGVdOiB7fTtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2RlclBhcnNlQ29tcGxldGVdOiBBdmlmRGVjb2RlclBhcnNlQ29tcGxldGU7XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuZXJyb3JdOiBFcnJvcjtcclxuICBbV29ya2VyQXZpZkRlY29kZXJNZXNzYWdlQ2hhbm5lbC5hdmlmRGVjb2RlckltYWdlXTogeyBpZDogc3RyaW5nIH07XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuYXZpZkRlY29kZXJOdGhJbWFnZV06IEF2aWZEZWNvZGVyTnRoSW1hZ2VEYXRhO1xyXG4gIFtXb3JrZXJBdmlmRGVjb2Rlck1lc3NhZ2VDaGFubmVsLmF2aWZEZWNvZGVyTnRoSW1hZ2VSZXN1bHRdOiBBdmlmRGVjb2Rlck5leHRJbWFnZURhdGE7XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuYXZpZkRlY29kZXJEZXN0cm95XToge307XHJcbiAgW1dvcmtlckF2aWZEZWNvZGVyTWVzc2FnZUNoYW5uZWwuYXZpZkRlY29kZXJDb25zb2xlXToge307XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./src/types/WorkerMessageType.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/Libavif/avifDecodeFileWeb.min.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./src/Libavif/avifDecodeFileWeb.min.js ***!\\n  \\\\**********************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   \\\\\\\"default\\\\\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\\\n/* harmony export */ });\\\\n\\\\nvar Libavif = (() => {\\\\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\\\\n  \\\\n  return (\\\\nfunction(moduleArg = {}) {\\\\n\\\\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\\\\\\\"ready\\\\\\\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\\\\\\\"./this.program\\\\\\\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\\\\\\\"\\\\\\\";function locateFile(path){if(Module[\\\\\\\"locateFile\\\\\\\"]){return Module[\\\\\\\"locateFile\\\\\\\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\\\\\\\"undefined\\\\\\\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\\\\\\\"blob:\\\\\\\")){scriptDirectory=\\\\\\\"\\\\\\\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\\\\\\\"\\\\\\\").lastIndexOf(\\\\\\\"/\\\\\\\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\\\\\\\"GET\\\\\\\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\\\\\\\"GET\\\\\\\",url,false);xhr.responseType=\\\\\\\"arraybuffer\\\\\\\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\\\\\\\"GET\\\\\\\",url,true);xhr.responseType=\\\\\\\"arraybuffer\\\\\\\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\\\\\\\"print\\\\\\\"]||console.log.bind(console);var err=Module[\\\\\\\"printErr\\\\\\\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\\\\\\\"arguments\\\\\\\"])arguments_=Module[\\\\\\\"arguments\\\\\\\"];if(Module[\\\\\\\"thisProgram\\\\\\\"])thisProgram=Module[\\\\\\\"thisProgram\\\\\\\"];if(Module[\\\\\\\"quit\\\\\\\"])quit_=Module[\\\\\\\"quit\\\\\\\"];var wasmBinary;if(Module[\\\\\\\"wasmBinary\\\\\\\"])wasmBinary=Module[\\\\\\\"wasmBinary\\\\\\\"];if(typeof WebAssembly!=\\\\\\\"object\\\\\\\"){abort(\\\\\\\"no native wasm support detected\\\\\\\")}function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\\\\\\\"HEAP8\\\\\\\"]=HEAP8=new Int8Array(b);Module[\\\\\\\"HEAP16\\\\\\\"]=HEAP16=new Int16Array(b);Module[\\\\\\\"HEAPU8\\\\\\\"]=HEAPU8=new Uint8Array(b);Module[\\\\\\\"HEAPU16\\\\\\\"]=HEAPU16=new Uint16Array(b);Module[\\\\\\\"HEAP32\\\\\\\"]=HEAP32=new Int32Array(b);Module[\\\\\\\"HEAPU32\\\\\\\"]=HEAPU32=new Uint32Array(b);Module[\\\\\\\"HEAPF32\\\\\\\"]=HEAPF32=new Float32Array(b);Module[\\\\\\\"HEAPF64\\\\\\\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\\\\\\\"preRun\\\\\\\"]){if(typeof Module[\\\\\\\"preRun\\\\\\\"]==\\\\\\\"function\\\\\\\")Module[\\\\\\\"preRun\\\\\\\"]=[Module[\\\\\\\"preRun\\\\\\\"]];while(Module[\\\\\\\"preRun\\\\\\\"].length){addOnPreRun(Module[\\\\\\\"preRun\\\\\\\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\\\\\\\"postRun\\\\\\\"]){if(typeof Module[\\\\\\\"postRun\\\\\\\"]==\\\\\\\"function\\\\\\\")Module[\\\\\\\"postRun\\\\\\\"]=[Module[\\\\\\\"postRun\\\\\\\"]];while(Module[\\\\\\\"postRun\\\\\\\"].length){addOnPostRun(Module[\\\\\\\"postRun\\\\\\\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\\\\\\\"monitorRunDependencies\\\\\\\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\\\\\\\"monitorRunDependencies\\\\\\\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\\\\\\\"onAbort\\\\\\\"]?.(what);what=\\\\\\\"Aborted(\\\\\\\"+what+\\\\\\\")\\\\\\\";err(what);ABORT=true;EXITSTATUS=1;what+=\\\\\\\". Build with -sASSERTIONS for more info.\\\\\\\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\\\\\\\"data:application/octet-stream;base64,\\\\\\\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\\\\\\\"data:application/octet-stream;base64,\\\\\\\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\\\\\\\"both async and sync fetching of the wasm failed\\\\\\\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\\\\\\\"a\\\\\\\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\\\\\\\"h\\\\\\\"];updateMemoryViews();addOnInit(wasmExports[\\\\\\\"i\\\\\\\"]);removeRunDependency(\\\\\\\"wasm-instantiate\\\\\\\");return wasmExports}addRunDependency(\\\\\\\"wasm-instantiate\\\\\\\");function receiveInstantiationResult(result){receiveInstance(result[\\\\\\\"instance\\\\\\\"])}if(Module[\\\\\\\"instantiateWasm\\\\\\\"]){try{return Module[\\\\\\\"instantiateWasm\\\\\\\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};function getValue(ptr,type=\\\\\\\"i8\\\\\\\"){if(type.endsWith(\\\\\\\"*\\\\\\\"))type=\\\\\\\"*\\\\\\\";switch(type){case\\\\\\\"i1\\\\\\\":return HEAP8[ptr];case\\\\\\\"i8\\\\\\\":return HEAP8[ptr];case\\\\\\\"i16\\\\\\\":return HEAP16[ptr>>1];case\\\\\\\"i32\\\\\\\":return HEAP32[ptr>>2];case\\\\\\\"i64\\\\\\\":abort(\\\\\\\"to do getValue(i64) use WASM_BIGINT\\\\\\\");case\\\\\\\"float\\\\\\\":return HEAPF32[ptr>>2];case\\\\\\\"double\\\\\\\":return HEAPF64[ptr>>3];case\\\\\\\"*\\\\\\\":return HEAPU32[ptr>>2];default:abort(`invalid type for getValue: ${type}`)}}var noExitRuntime=Module[\\\\\\\"noExitRuntime\\\\\\\"]||true;var UTF8Decoder=typeof TextDecoder!=\\\\\\\"undefined\\\\\\\"?new TextDecoder(\\\\\\\"utf8\\\\\\\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\\\\\\\"\\\\\\\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\\\\\\\"\\\\\\\";var ___assert_fail=(condition,filename,line,func)=>{abort(`Assertion failed: ${UTF8ToString(condition)}, at: `+[filename?UTF8ToString(filename):\\\\\\\"unknown filename\\\\\\\",line,func?UTF8ToString(func):\\\\\\\"unknown function\\\\\\\"])};var _abort=()=>{abort(\\\\\\\"\\\\\\\")};var _emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var _fd_close=fd=>52;var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);return 70}var printCharBuffers=[null,[],[]];var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};var SYSCALLS={varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret}};var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};var getCFunc=ident=>{var func=Module[\\\\\\\"_\\\\\\\"+ident];return func};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={\\\\\\\"string\\\\\\\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\\\\\\\"array\\\\\\\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\\\\\\\"string\\\\\\\"){return UTF8ToString(ret)}if(returnType===\\\\\\\"boolean\\\\\\\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func(...cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=(ident,returnType,argTypes,opts)=>{var numericArgs=!argTypes||argTypes.every(type=>type===\\\\\\\"number\\\\\\\"||type===\\\\\\\"boolean\\\\\\\");var numericRet=returnType!==\\\\\\\"string\\\\\\\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return(...args)=>ccall(ident,returnType,argTypes,args,opts)};var wasmImports={a:___assert_fail,b:_abort,f:_emscripten_memcpy_js,g:_emscripten_resize_heap,d:_fd_close,c:_fd_seek,e:_fd_write};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\\\\\\\"i\\\\\\\"])();var _avifGetDecoderImage=Module[\\\\\\\"_avifGetDecoderImage\\\\\\\"]=a0=>(_avifGetDecoderImage=Module[\\\\\\\"_avifGetDecoderImage\\\\\\\"]=wasmExports[\\\\\\\"j\\\\\\\"])(a0);var _avifSetDecoderMaxThreads=Module[\\\\\\\"_avifSetDecoderMaxThreads\\\\\\\"]=(a0,a1)=>(_avifSetDecoderMaxThreads=Module[\\\\\\\"_avifSetDecoderMaxThreads\\\\\\\"]=wasmExports[\\\\\\\"k\\\\\\\"])(a0,a1);var _avifGetRGBImage=Module[\\\\\\\"_avifGetRGBImage\\\\\\\"]=()=>(_avifGetRGBImage=Module[\\\\\\\"_avifGetRGBImage\\\\\\\"]=wasmExports[\\\\\\\"l\\\\\\\"])();var _avifGetImageTiming=Module[\\\\\\\"_avifGetImageTiming\\\\\\\"]=(a0,a1)=>(_avifGetImageTiming=Module[\\\\\\\"_avifGetImageTiming\\\\\\\"]=wasmExports[\\\\\\\"m\\\\\\\"])(a0,a1);var _avifGetCopyImage=Module[\\\\\\\"_avifGetCopyImage\\\\\\\"]=(a0,a1)=>(_avifGetCopyImage=Module[\\\\\\\"_avifGetCopyImage\\\\\\\"]=wasmExports[\\\\\\\"n\\\\\\\"])(a0,a1);var _avifGetImageToRGBImage=Module[\\\\\\\"_avifGetImageToRGBImage\\\\\\\"]=a0=>(_avifGetImageToRGBImage=Module[\\\\\\\"_avifGetImageToRGBImage\\\\\\\"]=wasmExports[\\\\\\\"o\\\\\\\"])(a0);var _avifGetRGBImagePixels=Module[\\\\\\\"_avifGetRGBImagePixels\\\\\\\"]=a0=>(_avifGetRGBImagePixels=Module[\\\\\\\"_avifGetRGBImagePixels\\\\\\\"]=wasmExports[\\\\\\\"p\\\\\\\"])(a0);var _avifGetRGBImageWidth=Module[\\\\\\\"_avifGetRGBImageWidth\\\\\\\"]=a0=>(_avifGetRGBImageWidth=Module[\\\\\\\"_avifGetRGBImageWidth\\\\\\\"]=wasmExports[\\\\\\\"q\\\\\\\"])(a0);var _avifGetRGBImageHeight=Module[\\\\\\\"_avifGetRGBImageHeight\\\\\\\"]=a0=>(_avifGetRGBImageHeight=Module[\\\\\\\"_avifGetRGBImageHeight\\\\\\\"]=wasmExports[\\\\\\\"r\\\\\\\"])(a0);var _avifGetRGBImageRowBytes=Module[\\\\\\\"_avifGetRGBImageRowBytes\\\\\\\"]=a0=>(_avifGetRGBImageRowBytes=Module[\\\\\\\"_avifGetRGBImageRowBytes\\\\\\\"]=wasmExports[\\\\\\\"s\\\\\\\"])(a0);var _avifGetRGBImageDepth=Module[\\\\\\\"_avifGetRGBImageDepth\\\\\\\"]=a0=>(_avifGetRGBImageDepth=Module[\\\\\\\"_avifGetRGBImageDepth\\\\\\\"]=wasmExports[\\\\\\\"t\\\\\\\"])(a0);var _avifGetImageCount=Module[\\\\\\\"_avifGetImageCount\\\\\\\"]=a0=>(_avifGetImageCount=Module[\\\\\\\"_avifGetImageCount\\\\\\\"]=wasmExports[\\\\\\\"u\\\\\\\"])(a0);var _avifGetImageWidth=Module[\\\\\\\"_avifGetImageWidth\\\\\\\"]=a0=>(_avifGetImageWidth=Module[\\\\\\\"_avifGetImageWidth\\\\\\\"]=wasmExports[\\\\\\\"v\\\\\\\"])(a0);var _avifGetImageHeight=Module[\\\\\\\"_avifGetImageHeight\\\\\\\"]=a0=>(_avifGetImageHeight=Module[\\\\\\\"_avifGetImageHeight\\\\\\\"]=wasmExports[\\\\\\\"w\\\\\\\"])(a0);var _avifVersion=Module[\\\\\\\"_avifVersion\\\\\\\"]=()=>(_avifVersion=Module[\\\\\\\"_avifVersion\\\\\\\"]=wasmExports[\\\\\\\"x\\\\\\\"])();var _avifResultToString=Module[\\\\\\\"_avifResultToString\\\\\\\"]=a0=>(_avifResultToString=Module[\\\\\\\"_avifResultToString\\\\\\\"]=wasmExports[\\\\\\\"y\\\\\\\"])(a0);var _avifRGBImageSetDefaults=Module[\\\\\\\"_avifRGBImageSetDefaults\\\\\\\"]=(a0,a1)=>(_avifRGBImageSetDefaults=Module[\\\\\\\"_avifRGBImageSetDefaults\\\\\\\"]=wasmExports[\\\\\\\"z\\\\\\\"])(a0,a1);var _avifRGBImageAllocatePixels=Module[\\\\\\\"_avifRGBImageAllocatePixels\\\\\\\"]=a0=>(_avifRGBImageAllocatePixels=Module[\\\\\\\"_avifRGBImageAllocatePixels\\\\\\\"]=wasmExports[\\\\\\\"A\\\\\\\"])(a0);var _avifRGBImageFreePixels=Module[\\\\\\\"_avifRGBImageFreePixels\\\\\\\"]=a0=>(_avifRGBImageFreePixels=Module[\\\\\\\"_avifRGBImageFreePixels\\\\\\\"]=wasmExports[\\\\\\\"B\\\\\\\"])(a0);var _avifDecoderCreate=Module[\\\\\\\"_avifDecoderCreate\\\\\\\"]=()=>(_avifDecoderCreate=Module[\\\\\\\"_avifDecoderCreate\\\\\\\"]=wasmExports[\\\\\\\"C\\\\\\\"])();var _avifDecoderDestroy=Module[\\\\\\\"_avifDecoderDestroy\\\\\\\"]=a0=>(_avifDecoderDestroy=Module[\\\\\\\"_avifDecoderDestroy\\\\\\\"]=wasmExports[\\\\\\\"D\\\\\\\"])(a0);var _avifDecoderSetIOMemory=Module[\\\\\\\"_avifDecoderSetIOMemory\\\\\\\"]=(a0,a1,a2)=>(_avifDecoderSetIOMemory=Module[\\\\\\\"_avifDecoderSetIOMemory\\\\\\\"]=wasmExports[\\\\\\\"E\\\\\\\"])(a0,a1,a2);var _avifDecoderParse=Module[\\\\\\\"_avifDecoderParse\\\\\\\"]=a0=>(_avifDecoderParse=Module[\\\\\\\"_avifDecoderParse\\\\\\\"]=wasmExports[\\\\\\\"F\\\\\\\"])(a0);var _avifDecoderNextImage=Module[\\\\\\\"_avifDecoderNextImage\\\\\\\"]=a0=>(_avifDecoderNextImage=Module[\\\\\\\"_avifDecoderNextImage\\\\\\\"]=wasmExports[\\\\\\\"G\\\\\\\"])(a0);var _avifDecoderNthImageTiming=Module[\\\\\\\"_avifDecoderNthImageTiming\\\\\\\"]=(a0,a1,a2)=>(_avifDecoderNthImageTiming=Module[\\\\\\\"_avifDecoderNthImageTiming\\\\\\\"]=wasmExports[\\\\\\\"H\\\\\\\"])(a0,a1,a2);var _avifDecoderNthImage=Module[\\\\\\\"_avifDecoderNthImage\\\\\\\"]=(a0,a1)=>(_avifDecoderNthImage=Module[\\\\\\\"_avifDecoderNthImage\\\\\\\"]=wasmExports[\\\\\\\"I\\\\\\\"])(a0,a1);var _avifImageYUVToRGB=Module[\\\\\\\"_avifImageYUVToRGB\\\\\\\"]=(a0,a1)=>(_avifImageYUVToRGB=Module[\\\\\\\"_avifImageYUVToRGB\\\\\\\"]=wasmExports[\\\\\\\"J\\\\\\\"])(a0,a1);var _memcpy=Module[\\\\\\\"_memcpy\\\\\\\"]=(a0,a1,a2)=>(_memcpy=Module[\\\\\\\"_memcpy\\\\\\\"]=wasmExports[\\\\\\\"K\\\\\\\"])(a0,a1,a2);var _memset=Module[\\\\\\\"_memset\\\\\\\"]=(a0,a1,a2)=>(_memset=Module[\\\\\\\"_memset\\\\\\\"]=wasmExports[\\\\\\\"L\\\\\\\"])(a0,a1,a2);var _malloc=Module[\\\\\\\"_malloc\\\\\\\"]=a0=>(_malloc=Module[\\\\\\\"_malloc\\\\\\\"]=wasmExports[\\\\\\\"M\\\\\\\"])(a0);var _free=Module[\\\\\\\"_free\\\\\\\"]=a0=>(_free=Module[\\\\\\\"_free\\\\\\\"]=wasmExports[\\\\\\\"N\\\\\\\"])(a0);var stackSave=()=>(stackSave=wasmExports[\\\\\\\"O\\\\\\\"])();var stackRestore=a0=>(stackRestore=wasmExports[\\\\\\\"P\\\\\\\"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports[\\\\\\\"Q\\\\\\\"])(a0);Module[\\\\\\\"ccall\\\\\\\"]=ccall;Module[\\\\\\\"cwrap\\\\\\\"]=cwrap;Module[\\\\\\\"getValue\\\\\\\"]=getValue;Module[\\\\\\\"UTF8ToString\\\\\\\"]=UTF8ToString;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\\\\\\\"calledRun\\\\\\\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\\\\\\\"onRuntimeInitialized\\\\\\\"])Module[\\\\\\\"onRuntimeInitialized\\\\\\\"]();postRun()}if(Module[\\\\\\\"setStatus\\\\\\\"]){Module[\\\\\\\"setStatus\\\\\\\"](\\\\\\\"Running...\\\\\\\");setTimeout(function(){setTimeout(function(){Module[\\\\\\\"setStatus\\\\\\\"](\\\\\\\"\\\\\\\")},1);doRun()},1)}else{doRun()}}if(Module[\\\\\\\"preInit\\\\\\\"]){if(typeof Module[\\\\\\\"preInit\\\\\\\"]==\\\\\\\"function\\\\\\\")Module[\\\\\\\"preInit\\\\\\\"]=[Module[\\\\\\\"preInit\\\\\\\"]];while(Module[\\\\\\\"preInit\\\\\\\"].length>0){Module[\\\\\\\"preInit\\\\\\\"].pop()()}}run();\\\\n\\\\n\\\\n  return moduleArg.ready\\\\n}\\\\n);\\\\n})();\\\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Libavif);//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./src/Libavif/avifDecodeFileWeb.min.js\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ \\t});\\n/************************************************************************/\\n/******/ \\t// The module cache\\n/******/ \\tvar __webpack_module_cache__ = {};\\n/******/ \\t\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tvar cachedModule = __webpack_module_cache__[moduleId];\\n/******/ \\t\\tif (cachedModule !== undefined) {\\n/******/ \\t\\t\\treturn cachedModule.exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = __webpack_module_cache__[moduleId] = {\\n/******/ \\t\\t\\t// no module.id needed\\n/******/ \\t\\t\\t// no module.loaded needed\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/ \\t\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/ \\t\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t/* webpack/runtime/define property getters */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define getter functions for harmony exports\\n/******/ \\t\\t__webpack_require__.d = (exports, definition) => {\\n/******/ \\t\\t\\tfor(var key in definition) {\\n/******/ \\t\\t\\t\\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\\n/******/ \\t\\t\\t\\t\\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\\n/******/ \\t\\t\\t\\t}\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/hasOwnProperty shorthand */\\n/******/ \\t(() => {\\n/******/ \\t\\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/make namespace object */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define __esModule on exports\\n/******/ \\t\\t__webpack_require__.r = (exports) => {\\n/******/ \\t\\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t\\n/******/ \\t// startup\\n/******/ \\t// Load entry module and return exports\\n/******/ \\t// This entry module is referenced by other modules so it can't be inlined\\n/******/ \\tvar __webpack_exports__ = __webpack_require__(\\\"./node_modules/ts-loader/index.js!./src/Worker/main.worker.ts\\\");\\n/******/ \\t\\n/******/ })()\\n;\", \"Worker\", undefined, undefined);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Worker/main.worker.ts\n");

/***/ }),

/***/ "./node_modules/worker-loader/dist/runtime/inline.js":
/*!***********************************************************!*\
  !*** ./node_modules/worker-loader/dist/runtime/inline.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5saW5lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0F2aWZQbGF5ZXJXZWIvLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5saW5lLmpzP2VjZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiwgbm8tdXNlLWJlZm9yZS1kZWZpbmUsIG5ldy1jYXAgKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNvbnRlbnQsIHdvcmtlckNvbnN0cnVjdG9yLCB3b3JrZXJPcHRpb25zLCB1cmwpIHtcbiAgdmFyIGdsb2JhbFNjb3BlID0gc2VsZiB8fCB3aW5kb3c7XG5cbiAgdHJ5IHtcbiAgICB0cnkge1xuICAgICAgdmFyIGJsb2I7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIE5ldyBBUElcbiAgICAgICAgYmxvYiA9IG5ldyBnbG9iYWxTY29wZS5CbG9iKFtjb250ZW50XSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEJsb2JCdWlsZGVyID0gRGVwcmVjYXRlZCwgYnV0IHdpZGVseSBpbXBsZW1lbnRlZFxuICAgICAgICB2YXIgQmxvYkJ1aWxkZXIgPSBnbG9iYWxTY29wZS5CbG9iQnVpbGRlciB8fCBnbG9iYWxTY29wZS5XZWJLaXRCbG9iQnVpbGRlciB8fCBnbG9iYWxTY29wZS5Nb3pCbG9iQnVpbGRlciB8fCBnbG9iYWxTY29wZS5NU0Jsb2JCdWlsZGVyO1xuICAgICAgICBibG9iID0gbmV3IEJsb2JCdWlsZGVyKCk7XG4gICAgICAgIGJsb2IuYXBwZW5kKGNvbnRlbnQpO1xuICAgICAgICBibG9iID0gYmxvYi5nZXRCbG9iKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBVUkwgPSBnbG9iYWxTY29wZS5VUkwgfHwgZ2xvYmFsU2NvcGUud2Via2l0VVJMO1xuICAgICAgdmFyIG9iamVjdFVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG4gICAgICB2YXIgd29ya2VyID0gbmV3IGdsb2JhbFNjb3BlW3dvcmtlckNvbnN0cnVjdG9yXShvYmplY3RVUkwsIHdvcmtlck9wdGlvbnMpO1xuICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChvYmplY3RVUkwpO1xuICAgICAgcmV0dXJuIHdvcmtlcjtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gbmV3IGdsb2JhbFNjb3BlW3dvcmtlckNvbnN0cnVjdG9yXShcImRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdCxcIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnQpKSwgd29ya2VyT3B0aW9ucyk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKCF1cmwpIHtcbiAgICAgIHRocm93IEVycm9yKFwiSW5saW5lIHdvcmtlciBpcyBub3Qgc3VwcG9ydGVkXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgZ2xvYmFsU2NvcGVbd29ya2VyQ29uc3RydWN0b3JdKHVybCwgd29ya2VyT3B0aW9ucyk7XG4gIH1cbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/worker-loader/dist/runtime/inline.js\n");

/***/ }),

/***/ "?9157":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});