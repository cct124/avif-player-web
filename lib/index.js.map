{"version":3,"file":"index.js","sources":["../src/worker/worker.ts","../src/index.ts"],"sourcesContent":["export default \"onmessage=function(e){console.log(\\\"Worker: Message received from main script\\\");var s=e.data[0]*e.data[1];if(isNaN(s))postMessage(\\\"Please write two numbers\\\");else{var a=\\\"Result: \\\"+s;console.log(\\\"Worker: Posting message back to main script\\\"),postMessage(a)}};\";","import workerScript from \"./worker/worker\";\nconst blob = new Blob([workerScript], { type: \"text/javascript\" });\nconst workerUrl = URL.createObjectURL(blob);\n// const WORKER = \"%cWORKER_FILE_URL%c\";\n// if (window.Worker) {\n//   const myWorker = new Worker(\"worker.js\");\n//   [first, second].forEach((input) => {\n//     input.onchange = function () {\n//       myWorker.postMessage([first.value, second.value]);\n//       console.log(\"Message posted to worker\");\n//     };\n//   });\n//   myWorker.onmessage = function (e) {\n//     result.textContent = e.data;\n//     console.log(\"Message received from worker\");\n//   };\n// } else {\n//   console.log(\"Your browser doesn't support web workers.\");\n// }\nexport default class Libavif {\n    constructor() {\n        this.worker = new Worker(workerUrl);\n    }\n}\n"],"names":[],"mappings":"AAAA,mBAAe,2QAA2Q;;ACC1R,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;AACnE,MAAM,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,OAAO,CAAC;AAC7B,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;AAC5C,KAAK;AACL;;;;"}